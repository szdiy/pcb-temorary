# Makefile.in generated by automake 1.12.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/pcb
pkgincludedir = $(includedir)/pcb
pkglibdir = $(libdir)/pcb
pkglibexecdir = $(libexecdir)/pcb
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = pcb$(EXEEXT)
am__append_1 = toporouter.c toporouter.h
am__append_2 = ../gts/libgts.a
am__append_3 = ../gts/libgts.a
am__append_4 = ${DBUS_SRCS}
am__append_5 = dbus-introspect.h

# If we are building with GL support, we need some extra files
am__append_6 = ${GL_SRCS}
am__append_7 = ${LIBGTK_GL_SRCS}
#am__append_8 = ${LIBGTK_GDK_SRCS}
#am__append_9 = pcb_icon.o
#am__append_10 = pcb_icon.o
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/depcomp $(top_srcdir)/mkinstalldirs \
	$(top_srcdir)/ylwrap edif.c edif.h parse_l.c parse_y.c \
	parse_y.h res_lex.c res_parse.c res_parse.h
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_gl.m4 \
	$(top_srcdir)/m4/ax_check_glu.m4 \
	$(top_srcdir)/m4/ax_lang_compiler_ms.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/codeset.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/glibc21.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intdiv0.m4 \
	$(top_srcdir)/m4/intmax.m4 $(top_srcdir)/m4/inttypes-pri.m4 \
	$(top_srcdir)/m4/inttypes.m4 $(top_srcdir)/m4/inttypes_h.m4 \
	$(top_srcdir)/m4/isc-posix.m4 $(top_srcdir)/m4/lcmessage.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/longdouble.m4 \
	$(top_srcdir)/m4/longlong.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/printf-posix.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/signed.m4 \
	$(top_srcdir)/m4/size_max.m4 $(top_srcdir)/m4/stdint_h.m4 \
	$(top_srcdir)/m4/uintmax_t.m4 $(top_srcdir)/m4/ulonglong.m4 \
	$(top_srcdir)/m4/wchar_t.m4 $(top_srcdir)/m4/wint_t.m4 \
	$(top_srcdir)/m4/xsize.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/m4/m4_ax_func_mkdir.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libbatch_a_AR = $(AR) $(ARFLAGS)
libbatch_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = hid/batch/libbatch_a-batch.$(OBJEXT)
am_libbatch_a_OBJECTS = $(am__objects_1)
libbatch_a_OBJECTS = $(am_libbatch_a_OBJECTS)
libbom_a_AR = $(AR) $(ARFLAGS)
libbom_a_LIBADD =
am_libbom_a_OBJECTS = hid/bom/bom.$(OBJEXT)
libbom_a_OBJECTS = $(am_libbom_a_OBJECTS)
libgcode_a_AR = $(AR) $(ARFLAGS)
libgcode_a_LIBADD =
am__objects_2 = hid/gcode/libgcode_a-gcode.$(OBJEXT) \
	hid/gcode/libgcode_a-decompose.$(OBJEXT) \
	hid/gcode/libgcode_a-trace.$(OBJEXT) \
	hid/gcode/libgcode_a-curve.$(OBJEXT)
am_libgcode_a_OBJECTS = $(am__objects_2)
libgcode_a_OBJECTS = $(am_libgcode_a_OBJECTS)
libgerber_a_AR = $(AR) $(ARFLAGS)
libgerber_a_LIBADD =
am_libgerber_a_OBJECTS = hid/gerber/gerber.$(OBJEXT)
libgerber_a_OBJECTS = $(am_libgerber_a_OBJECTS)
libgtk_a_AR = $(AR) $(ARFLAGS)
libgtk_a_LIBADD =
am__libgtk_a_SOURCES_DIST = dolists.h hid/hidint.h \
	hid/gtk/ghid-cell-renderer-visibility.c \
	hid/gtk/ghid-cell-renderer-visibility.h \
	hid/gtk/ghid-coord-entry.c hid/gtk/ghid-coord-entry.h \
	hid/gtk/ghid-layer-selector.c hid/gtk/ghid-layer-selector.h \
	hid/gtk/ghid-main-menu.c hid/gtk/ghid-main-menu.h \
	hid/gtk/ghid-route-style-selector.c \
	hid/gtk/ghid-route-style-selector.h hid/gtk/gtkhid-main.c \
	hid/gtk/gtkhid.h hid/gtk/gui.h hid/gtk/gui-command-window.c \
	hid/gtk/gui-config.c hid/gtk/gui-dialog-print.c \
	hid/gtk/gui-dialog.c hid/gtk/gui-drc-window.c \
	hid/gtk/gui-drc-window.h hid/gtk/gui-keyref-window.c \
	hid/gtk/gui-library-window.c hid/gtk/gui-library-window.h \
	hid/gtk/gui-log-window.c hid/gtk/gui-misc.c \
	hid/gtk/gui-netlist-window.c hid/gtk/gui-output-events.c \
	hid/gtk/gui-pinout-preview.c hid/gtk/gui-pinout-preview.h \
	hid/gtk/gui-pinout-window.c hid/gtk/gui-top-window.c \
	hid/gtk/gui-utils.c hid/gtk/gtkhid-gl.c \
	hid/gtk/gui-trackball.c hid/gtk/gui-trackball.h \
	hid/gtk/gtkhid-gdk.c hid/gtk/gtk_lists.h
am__objects_3 = hid/gtk/libgtk_a-gtkhid-gl.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-trackball.$(OBJEXT)
am__objects_4 = $(am__objects_3)
am__objects_5 = hid/gtk/libgtk_a-gtkhid-gdk.$(OBJEXT)
#am__objects_6 = $(am__objects_5)
am__objects_7 =  \
	hid/gtk/libgtk_a-ghid-cell-renderer-visibility.$(OBJEXT) \
	hid/gtk/libgtk_a-ghid-coord-entry.$(OBJEXT) \
	hid/gtk/libgtk_a-ghid-layer-selector.$(OBJEXT) \
	hid/gtk/libgtk_a-ghid-main-menu.$(OBJEXT) \
	hid/gtk/libgtk_a-ghid-route-style-selector.$(OBJEXT) \
	hid/gtk/libgtk_a-gtkhid-main.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-command-window.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-config.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-dialog-print.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-dialog.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-drc-window.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-keyref-window.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-library-window.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-log-window.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-misc.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-netlist-window.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-output-events.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-pinout-preview.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-pinout-window.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-top-window.$(OBJEXT) \
	hid/gtk/libgtk_a-gui-utils.$(OBJEXT) $(am__objects_4) \
	$(am__objects_6)
am_libgtk_a_OBJECTS = $(am__objects_7)
libgtk_a_OBJECTS = $(am_libgtk_a_OBJECTS)
liblesstif_a_AR = $(AR) $(ARFLAGS)
liblesstif_a_LIBADD =
am__objects_8 = hid/lesstif/liblesstif_a-dialogs.$(OBJEXT) \
	hid/lesstif/liblesstif_a-library.$(OBJEXT) \
	hid/lesstif/liblesstif_a-main.$(OBJEXT) \
	hid/lesstif/liblesstif_a-menu.$(OBJEXT) \
	hid/lesstif/liblesstif_a-netlist.$(OBJEXT) \
	hid/lesstif/liblesstif_a-styles.$(OBJEXT)
am_liblesstif_a_OBJECTS = $(am__objects_8)
liblesstif_a_OBJECTS = $(am_liblesstif_a_OBJECTS)
liblpr_a_AR = $(AR) $(ARFLAGS)
liblpr_a_LIBADD =
am_liblpr_a_OBJECTS = hid/lpr/lpr.$(OBJEXT)
liblpr_a_OBJECTS = $(am_liblpr_a_OBJECTS)
libnelma_a_AR = $(AR) $(ARFLAGS)
libnelma_a_LIBADD =
am__objects_9 = hid/nelma/libnelma_a-nelma.$(OBJEXT)
am_libnelma_a_OBJECTS = $(am__objects_9)
libnelma_a_OBJECTS = $(am_libnelma_a_OBJECTS)
libpng_a_AR = $(AR) $(ARFLAGS)
libpng_a_LIBADD =
am__objects_10 = hid/png/libpng_a-png.$(OBJEXT)
am_libpng_a_OBJECTS = $(am__objects_10)
libpng_a_OBJECTS = $(am_libpng_a_OBJECTS)
libps_a_AR = $(AR) $(ARFLAGS)
libps_a_LIBADD =
am__objects_11 = hid/ps/libps_a-ps.$(OBJEXT) \
	hid/ps/libps_a-eps.$(OBJEXT)
am_libps_a_OBJECTS = $(am__objects_11)
libps_a_OBJECTS = $(am_libps_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pcblibdir)"
PROGRAMS = $(bin_PROGRAMS)
am__pcb_SOURCES_DIST = action.c action.h autoplace.c autoplace.h \
	autoroute.c autoroute.h box.h buffer.c buffer.h change.c \
	change.h clip.c clip.h command.c command.h compat.c compat.h \
	const.h copy.c copy.h create.c create.h crosshair.c \
	crosshair.h data.c data.h djopt.c djopt.h dolists.h draw.c \
	draw.h drill.c drill.h edif.y edif_parse.h error.c error.h \
	file.c file.h find.c find.h flags.c fontmode.c free_atexit.c \
	free_atexit.h gettext.h global.h heap.c heap.h hid.h \
	hid_draw.h insert.c insert.h intersect.c intersect.h line.c \
	line.h lrealpath.c lrealpath.h macro.h main.c mirror.c \
	mirror.h misc.c misc.h move.c move.h mtspace.c mtspace.h \
	mymem.c mymem.h netlist.c parse_l.h parse_l.l parse_y.h \
	parse_y.y pcb-printf.c pcb-printf.h polygon.c polygon.h \
	polygon1.c polyarea.h puller.c print.c print.h rats.c rats.h \
	remove.c remove.h report.c report.h res_parse.y res_lex.l \
	resource.h rotate.c rotate.h rtree.c rtree.h rubberband.c \
	rubberband.h search.c search.h select.c select.h set.c set.h \
	strflags.c strflags.h thermal.c thermal.h undo.c undo.h \
	vector.c vector.h vendor.c vendor.h hid/common/actions.c \
	hid/common/actions.h hid/common/flags.c hid/common/hidinit.c \
	hid/common/hidinit.h hid/common/hidnogui.c \
	hid/common/hidnogui.h hid/common/extents.c \
	hid/common/draw_helpers.c hid/common/draw_helpers.h \
	hid/common/hid_resource.c hid/common/hid_resource.h \
	hid/hidint.h toporouter.c toporouter.h dbus-pcbmain.c \
	dbus-pcbmain.h dbus.h dbus.c hid/common/hidgl.c \
	hid/common/hidgl.h hid/common/trackball.c \
	hid/common/trackball.h core_lists.h
am__objects_12 = toporouter.$(OBJEXT)
am__objects_13 = dbus-pcbmain.$(OBJEXT) dbus.$(OBJEXT)
am__objects_14 = $(am__objects_13)
am__objects_15 = hid/common/hidgl.$(OBJEXT) \
	hid/common/trackball.$(OBJEXT)
am__objects_16 = $(am__objects_15)
am__objects_17 = action.$(OBJEXT) autoplace.$(OBJEXT) \
	autoroute.$(OBJEXT) buffer.$(OBJEXT) change.$(OBJEXT) \
	clip.$(OBJEXT) command.$(OBJEXT) compat.$(OBJEXT) \
	copy.$(OBJEXT) create.$(OBJEXT) crosshair.$(OBJEXT) \
	data.$(OBJEXT) djopt.$(OBJEXT) draw.$(OBJEXT) drill.$(OBJEXT) \
	edif.$(OBJEXT) error.$(OBJEXT) file.$(OBJEXT) find.$(OBJEXT) \
	flags.$(OBJEXT) fontmode.$(OBJEXT) free_atexit.$(OBJEXT) \
	heap.$(OBJEXT) insert.$(OBJEXT) intersect.$(OBJEXT) \
	line.$(OBJEXT) lrealpath.$(OBJEXT) main.$(OBJEXT) \
	mirror.$(OBJEXT) misc.$(OBJEXT) move.$(OBJEXT) \
	mtspace.$(OBJEXT) mymem.$(OBJEXT) netlist.$(OBJEXT) \
	parse_l.$(OBJEXT) parse_y.$(OBJEXT) pcb-printf.$(OBJEXT) \
	polygon.$(OBJEXT) polygon1.$(OBJEXT) puller.$(OBJEXT) \
	print.$(OBJEXT) rats.$(OBJEXT) remove.$(OBJEXT) \
	report.$(OBJEXT) res_parse.$(OBJEXT) res_lex.$(OBJEXT) \
	rotate.$(OBJEXT) rtree.$(OBJEXT) rubberband.$(OBJEXT) \
	search.$(OBJEXT) select.$(OBJEXT) set.$(OBJEXT) \
	strflags.$(OBJEXT) thermal.$(OBJEXT) undo.$(OBJEXT) \
	vector.$(OBJEXT) vendor.$(OBJEXT) hid/common/actions.$(OBJEXT) \
	hid/common/flags.$(OBJEXT) hid/common/hidinit.$(OBJEXT) \
	hid/common/hidnogui.$(OBJEXT) hid/common/extents.$(OBJEXT) \
	hid/common/draw_helpers.$(OBJEXT) \
	hid/common/hid_resource.$(OBJEXT) $(am__objects_12) \
	$(am__objects_14) $(am__objects_16)
am_pcb_OBJECTS = $(am__objects_17)
pcb_OBJECTS = $(am_pcb_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#am__skiplex = test -f $@ ||
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
YLWRAP = $(top_srcdir)/ylwrap
#am__skipyacc = test -f $@ ||
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
SOURCES = $(libbatch_a_SOURCES) $(libbom_a_SOURCES) \
	$(libgcode_a_SOURCES) $(libgerber_a_SOURCES) \
	$(libgtk_a_SOURCES) $(liblesstif_a_SOURCES) \
	$(liblpr_a_SOURCES) $(libnelma_a_SOURCES) $(libpng_a_SOURCES) \
	$(libps_a_SOURCES) $(pcb_SOURCES) $(EXTRA_pcb_SOURCES)
DIST_SOURCES = $(libbatch_a_SOURCES) $(libbom_a_SOURCES) \
	$(libgcode_a_SOURCES) $(libgerber_a_SOURCES) \
	$(am__libgtk_a_SOURCES_DIST) $(liblesstif_a_SOURCES) \
	$(liblpr_a_SOURCES) $(libnelma_a_SOURCES) $(libpng_a_SOURCES) \
	$(libps_a_SOURCES) $(am__pcb_SOURCES_DIST) \
	$(EXTRA_pcb_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
DATA = $(pcblib_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /opt/geda-project/pcb/missing --run aclocal-1.12
ALLOCA = 
ALL_LINGUAS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /opt/geda-project/pcb/missing --run autoconf
AUTOHEADER = ${SHELL} /opt/geda-project/pcb/missing --run autoheader
AUTOMAKE = ${SHELL} /opt/geda-project/pcb/missing --run automake-1.12
AWK = gawk
BTNMOD = Mod1
BUILD_INCLUDED_LIBINTL = no
CAIRO_CFLAGS = 
CAIRO_LIBS = 
CATOBJEXT = .gmo
CC = gcc -std=gnu11
CCDEPMODE = depmode=gcc3
CC_OR_CXX = gcc -std=gnu11
CFLAGS = -g -O2 -Wall -Wdeclaration-after-statement
CONVERT = /usr/bin/convert
CPP = gcc -std=gnu11 -E
CPPFLAGS =  -I/usr/include  -I/usr/include/dbus-1.0 -I/usr/lib64/dbus-1.0/include   -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include   -pthread -I/usr/include/gtk-2.0 -I/usr/lib64/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/libpng14   -I/usr/include  -pthread -I/usr/include/gtkglext-1.0 -I/usr/lib64/gtkglext-1.0/include -I/usr/include/gtk-2.0 -I/usr/lib64/gtk-2.0/include -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/libpng14 -I/usr/include/atk-1.0   -pthread -pthread -DPREFIXDIR=\"${prefix}\" -DBINDIR=\"${bindir}\" -DHOST=\"${host}\" -DPCBLIBDIR=\"${datarootdir}/pcb\" -DPCBTREEDIR=\"${datarootdir}/pcb/newlib\" -DPCBTREEPATH=\"${datarootdir}/pcb/newlib:${datarootdir}/pcb/pcblib-newlib\"
CXX = g++ -std=gnu++11
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wall
CYGPATH_W = echo
DATADIRNAME = share
DBUS_CFLAGS = -I/usr/include/dbus-1.0 -I/usr/lib64/dbus-1.0/include  
DBUS_LIBS = -ldbus-1  
DEFS = -DLOCALEDIR=\"$(localedir)\" -DHAVE_CONFIG_H
DEPDIR = .deps
DOC = doc
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FONTFILENAME = default_font
GDLIB_CONFIG = /usr/bin/gdlib-config
GENCAT = gencat
GERBV = notfound
GETTEXT_PACKAGE = pcb
GLIBC21 = yes
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include  
GLIB_LIBS = -lglib-2.0  
GLU_CFLAGS = -pthread
GLU_LIBS = -lGLU
GL_CFLAGS = -pthread
GL_LIBS = -lGL 
GMSGFMT = /usr/bin/msgfmt
GNUM4 = /usr/bin/m4
GREP = /usr/bin/grep
GSCHEM = notfound
GTKGLEXT_CFLAGS = -pthread -I/usr/include/gtkglext-1.0 -I/usr/lib64/gtkglext-1.0/include -I/usr/include/gtk-2.0 -I/usr/lib64/gtk-2.0/include -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/libpng14 -I/usr/include/atk-1.0  
GTKGLEXT_LIBS = -Wl,--export-dynamic -pthread -lgtkglext-x11-1.0 -lgdkglext-x11-1.0 -lGLU -lGL -lXmu -lXt -lSM -lICE -lgtk-x11-2.0 -lpangox-1.0 -lX11 -lgmodule-2.0 -lrt -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lglib-2.0  
GTK_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib64/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/libpng14  
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lglib-2.0  
GTK_UPDATE_ICON_CACHE_BIN = true
HAVE_ASPRINTF = 1
HAVE_POSIX_PRINTF = 1
HAVE_SNPRINTF = 1
HAVE_WPRINTF = 0
HIDLIBS =  libgtk.a liblpr.a libbom.a libgcode.a libgerber.a libnelma.a libpng.a libps.a
HIDLIST = gtk lpr bom gcode gerber nelma png ps
IM_ANIMATE = /usr/bin/animate
IM_COMPARE = /usr/bin/compare
IM_COMPOSITE = /usr/bin/composite
IM_CONVERT = /usr/bin/convert
IM_DISPLAY = /usr/bin/display
IM_MONTAGE = /usr/bin/montage
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLBISON = bison
INTLLIBS = 
INTLOBJS = 
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))
INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))
INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))
INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;
INTL_LIBTOOL_SUFFIX_PREFIX = 
KDEDATADIR = ${datadir}
KPSEWHICH = /usr/bin/kpsewhich
LDFLAGS =  -rdynamic
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LEX_PATH = /usr/bin/flex
LIBICONV = 
LIBINTL = 
LIBOBJS = 
LIBRARYFILENAME = pcblib
LIBS = -lfl -ldl -lm   -ldbus-1   -lXinerama -lXrender  -lglib-2.0   -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lglib-2.0    -L/usr/lib64 -lgd -lgd   -Wl,--export-dynamic -pthread -lgtkglext-x11-1.0 -lgdkglext-x11-1.0 -lGLU -lGL -lXmu -lXt -lSM -lICE -lgtk-x11-2.0 -lpangox-1.0 -lX11 -lgmodule-2.0 -lrt -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lglib-2.0   -lGLU -lGL 
LTLIBICONV = 
LTLIBINTL = 
LTLIBOBJS = 
M4 = /usr/bin/m4
MAINT = 
MAKEINFO = ${SHELL} /opt/geda-project/pcb/missing --run makeinfo
MKDIR_P = /usr/bin/mkdir -p
MKINFO = /usr/bin/makeinfo
MKINSTALLDIRS = $(top_builddir)/./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
OBJEXT = o
PACKAGE = pcb
PACKAGE_BUGREPORT = 
PACKAGE_NAME = pcb
PACKAGE_STRING = pcb 1.99z
PACKAGE_TARNAME = pcb
PACKAGE_URL = 
PACKAGE_VERSION = 1.99z
PATH_SEPARATOR = :
PCB = ${top_builddir}/src/pcb
PCBLIBDIR = ${datarootdir}/pcb
PCBTREEDIR = ${datarootdir}/pcb/newlib
PCBTREEPATH = ${datarootdir}/pcb/newlib:${datarootdir}/pcb/pcblib-newlib
PDFLATEX = /usr/bin/pdflatex
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSUB = po
PPMTOWINICON = /usr/bin/ppmtowinicon
PS2PDF = /usr/bin/ps2pdf
PTHREAD_CC = gcc -std=gnu11
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /usr/bin/sed
SETENV = /usr/bin/env
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
TEXI2DVI = /usr/bin/texi2dvi
TOPDIRS =  src lib newlib doc example tools tutorial README_FILES
UPDATE_DESKTOP_DATABASE = /usr/bin/update-desktop-database
UPDATE_MIME_DATABASE = /usr/bin/update-mime-database
USE_INCLUDED_LIBINTL = no
USE_NLS = yes
VERSION = 1.99z
WIN32 = no
WINDRES = 
WISH = /usr/bin/wish
XDGDATADIR = ${datadir}
XGETTEXT = /usr/bin/xgettext
XMKMF = 
XPMTOPPM = /usr/bin/xpmtoppm
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = -lXinerama -lXrender 
X_PRE_LIBS = 
YACC = bison -o y.tab.c
YACC_PATH = /usr/bin/bison
YFLAGS = 
abs_builddir = /opt/geda-project/pcb/src
abs_srcdir = /opt/geda-project/pcb/src
abs_top_builddir = /opt/geda-project/pcb
abs_top_srcdir = /opt/geda-project/pcb
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /opt/geda-project/pcb/install-sh
intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))
intltool__v_merge_options_0 = -q
libdir = ${exec_prefix}/lib64
libexecdir = ${exec_prefix}/lib
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
SUBDIRS = icons
pcbtreedir = ${datarootdir}/pcb/newlib
pcblibdir = ${datarootdir}/pcb
AUTOMAKE_OPTIONS = subdir-objects
noinst_LIBRARIES =  libgtk.a liblpr.a libbom.a libgcode.a libgerber.a libnelma.a libpng.a libps.a
EXTRA_LIBRARIES = \
	libgtk.a liblesstif.a libbatch.a \
	liblpr.a libgerber.a libbom.a libpng.a libps.a libnelma.a \
	libgcode.a

pcblib_DATA = \
	default_font \
	gpcb-menu.res \
	pcb-menu.res


# don't disable assert()
AM_CFLAGS = -DNDEBUG
PCB_SRCS = action.c action.h autoplace.c autoplace.h autoroute.c \
	autoroute.h box.h buffer.c buffer.h change.c change.h clip.c \
	clip.h command.c command.h compat.c compat.h const.h copy.c \
	copy.h create.c create.h crosshair.c crosshair.h data.c data.h \
	djopt.c djopt.h dolists.h draw.c draw.h drill.c drill.h edif.y \
	edif_parse.h error.c error.h file.c file.h find.c find.h \
	flags.c fontmode.c free_atexit.c free_atexit.h gettext.h \
	global.h heap.c heap.h hid.h hid_draw.h insert.c insert.h \
	intersect.c intersect.h line.c line.h lrealpath.c lrealpath.h \
	macro.h main.c mirror.c mirror.h misc.c misc.h move.c move.h \
	mtspace.c mtspace.h mymem.c mymem.h netlist.c parse_l.h \
	parse_l.l parse_y.h parse_y.y pcb-printf.c pcb-printf.h \
	polygon.c polygon.h polygon1.c polyarea.h puller.c print.c \
	print.h rats.c rats.h remove.c remove.h report.c report.h \
	res_parse.y res_lex.l resource.h rotate.c rotate.h rtree.c \
	rtree.h rubberband.c rubberband.h search.c search.h select.c \
	select.h set.c set.h strflags.c strflags.h thermal.c thermal.h \
	undo.c undo.h vector.c vector.h vendor.c vendor.h \
	hid/common/actions.c hid/common/actions.h hid/common/flags.c \
	hid/common/hidinit.c hid/common/hidinit.h \
	hid/common/hidnogui.c hid/common/hidnogui.h \
	hid/common/extents.c hid/common/draw_helpers.c \
	hid/common/draw_helpers.h hid/common/hid_resource.c \
	hid/common/hid_resource.h hid/hidint.h $(am__append_1) \
	$(am__append_4) $(am__append_6)
EXTRA_pcb_SOURCES = ${DBUS_SRCS} ${GL_SRCS} toporouter.c toporouter.h
DBUS_SRCS = \
	dbus-pcbmain.c \
	dbus-pcbmain.h \
	dbus.h \
	dbus.c

LIBGTK_GDK_SRCS = \
	hid/gtk/gtkhid-gdk.c

LIBGTK_GL_SRCS = \
	hid/gtk/gtkhid-gl.c \
	hid/gtk/gui-trackball.c \
	hid/gtk/gui-trackball.h

GL_SRCS = \
	hid/common/hidgl.c \
	hid/common/hidgl.h \
	hid/common/trackball.c \
	hid/common/trackball.h

BUILT_SOURCES = core_lists.h gpcb-menu.h hid/gtk/gtk_lists.h \
	hid/lesstif/lesstif_lists.h hid/batch/batch_lists.h \
	hid/png/png_lists.h hid/gcode/gcode_lists.h \
	hid/nelma/nelma_lists.h hid/ps/ps_lists.h parse_y.h pcb-menu.h \
	res_parse.h hid/common/hidlist.h $(am__append_5)
pcb_LDADD =  libgtk.a liblpr.a libbom.a libgcode.a libgerber.a libnelma.a libpng.a libps.a $(am__append_2) $(am__append_9)
pcb_DEPENDENCIES =  libgtk.a liblpr.a libbom.a libgcode.a libgerber.a libnelma.a libpng.a libps.a $(am__append_3) $(am__append_10)
pcb_SOURCES = ${PCB_SRCS} core_lists.h

# for globalconst.h
INCLUDES = -I$(top_srcdir) -I$(srcdir)/icons -I$(srcdir)/../gts
EXTRA_DIST = \
	check_icon.data \
	default_font \
	$(srcdir)/hid/batch/hid.conf \
	$(srcdir)/hid/bom/hid.conf \
	$(srcdir)/hid/gcode/hid.conf \
	$(srcdir)/hid/gerber/hid.conf \
	$(srcdir)/hid/gtk/gui-icons-misc.data \
	$(srcdir)/hid/gtk/gui-icons-mode-buttons.data \
	$(srcdir)/hid/gtk/hid.conf \
	$(srcdir)/hid/gtk/pcb.rc \
	$(srcdir)/hid/lesstif/hid.conf \
	$(srcdir)/hid/lpr/hid.conf \
	$(srcdir)/hid/png/hid.conf \
	$(srcdir)/hid/nelma/hid.conf \
	$(srcdir)/hid/ps/hid.conf \
	gpcb-menu.res.in \
	pcb-menu.res.in \
	gpcb-menu.res.h \
	pcb-menu.res.h \
	pcbtest.sh.in \
	dbus.xml

AM_YFLAGS = -d
libgtk_a_CPPFLAGS = -I./hid/gtk
LIBGTK_SRCS = dolists.h hid/hidint.h \
	hid/gtk/ghid-cell-renderer-visibility.c \
	hid/gtk/ghid-cell-renderer-visibility.h \
	hid/gtk/ghid-coord-entry.c hid/gtk/ghid-coord-entry.h \
	hid/gtk/ghid-layer-selector.c hid/gtk/ghid-layer-selector.h \
	hid/gtk/ghid-main-menu.c hid/gtk/ghid-main-menu.h \
	hid/gtk/ghid-route-style-selector.c \
	hid/gtk/ghid-route-style-selector.h hid/gtk/gtkhid-main.c \
	hid/gtk/gtkhid.h hid/gtk/gui.h hid/gtk/gui-command-window.c \
	hid/gtk/gui-config.c hid/gtk/gui-dialog-print.c \
	hid/gtk/gui-dialog.c hid/gtk/gui-drc-window.c \
	hid/gtk/gui-drc-window.h hid/gtk/gui-keyref-window.c \
	hid/gtk/gui-library-window.c hid/gtk/gui-library-window.h \
	hid/gtk/gui-log-window.c hid/gtk/gui-misc.c \
	hid/gtk/gui-netlist-window.c hid/gtk/gui-output-events.c \
	hid/gtk/gui-pinout-preview.c hid/gtk/gui-pinout-preview.h \
	hid/gtk/gui-pinout-window.c hid/gtk/gui-top-window.c \
	hid/gtk/gui-utils.c $(am__append_7) $(am__append_8)
libgtk_a_SOURCES = ${LIBGTK_SRCS} hid/gtk/gtk_lists.h
liblesstif_a_CPPFLAGS = -I./hid/lesstif
LIBLESSTIF_SRCS = \
	dolists.h \
	hid/hidint.h \
	hid/lesstif/dialogs.c \
	hid/lesstif/lesstif.h \
	hid/lesstif/library.c \
	hid/lesstif/main.c \
	hid/lesstif/menu.c \
	hid/lesstif/netlist.c \
	hid/lesstif/styles.c \
	hid/lesstif/xincludes.h 

liblesstif_a_SOURCES = ${LIBLESSTIF_SRCS} hid/lesstif/lesstif_lists.h
libbatch_a_CPPFLAGS = -I./hid/batch
LIBBATCH_SRCS = \
	hid/hidint.h \
	hid/batch/batch.c 

libbatch_a_SOURCES = ${LIBBATCH_SRCS} hid/batch/batch_lists.h
libgerber_a_SOURCES = \
	hid/hidint.h \
	hid/gerber/gerber.c

libbom_a_SOURCES = \
	hid/hidint.h \
	hid/bom/bom.c

libps_a_CPPFLAGS = -I./hid/ps
LIBPS_SRCS = \
	dolists.h \
	hid/hidint.h \
	hid/ps/ps.c \
	hid/ps/ps.h \
	hid/ps/eps.c 

libps_a_SOURCES = ${LIBPS_SRCS} hid/ps/ps_lists.h
libpng_a_CPPFLAGS = -I./hid/png
LIBPNG_SRCS = \
	dolists.h \
	hid/hidint.h \
	hid/png/png.c \
	hid/png/png.h 

libpng_a_SOURCES = ${LIBPNG_SRCS} hid/png/png_lists.h
libgcode_a_CPPFLAGS = -I./hid/gcode
LIBGCODE_SRCS = \
	dolists.h \
	hid/hidint.h \
	hid/gcode/gcode.c \
	hid/gcode/decompose.c \
	hid/gcode/decompose.h \
	hid/gcode/trace.c \
	hid/gcode/trace.h \
	hid/gcode/curve.c \
	hid/gcode/curve.h \
	hid/gcode/auxiliary.h \
	hid/gcode/bitmap.h \
	hid/gcode/lists.h \
	hid/gcode/potracelib.h 

libgcode_a_SOURCES = ${LIBGCODE_SRCS} hid/gcode/gcode_lists.h
libnelma_a_CPPFLAGS = -I./hid/nelma
LIBNELMA_SRCS = \
	dolists.h \
	hid/hidint.h \
	hid/nelma/nelma.c

libnelma_a_SOURCES = ${LIBNELMA_SRCS} hid/nelma/nelma_lists.h
liblpr_a_SOURCES = \
	hid/hidint.h \
	hid/lpr/lpr.c

DISTCLEANFILES = pcbtest.sh gpcb-menu.h pcb-menu.h \
	hid/batch/batch_lists.h \
	hid/common/hidlist.h \
	hid/gtk/gtk_lists.h \
	hid/lesstif/lesstif_lists.h \
	hid/png/png_lists.h \
	hid/gcode/gcode_lists.h \
	hid/nelma/nelma_lists.h \
	hid/ps/ps_lists.h \
	core_lists.h \
	dbus-introspect.h \
	gpcb-menu.res \
	pcb-menu.res \
	gpcb-menu.res.h \
	pcb-menu.res.h

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .l .o .obj .y
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
hid/batch/$(am__dirstamp):
	@$(MKDIR_P) hid/batch
	@: > hid/batch/$(am__dirstamp)
hid/batch/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hid/batch/$(DEPDIR)
	@: > hid/batch/$(DEPDIR)/$(am__dirstamp)
hid/batch/libbatch_a-batch.$(OBJEXT): hid/batch/$(am__dirstamp) \
	hid/batch/$(DEPDIR)/$(am__dirstamp)
libbatch.a: $(libbatch_a_OBJECTS) $(libbatch_a_DEPENDENCIES) $(EXTRA_libbatch_a_DEPENDENCIES) 
	-rm -f libbatch.a
	$(libbatch_a_AR) libbatch.a $(libbatch_a_OBJECTS) $(libbatch_a_LIBADD)
	$(RANLIB) libbatch.a
hid/bom/$(am__dirstamp):
	@$(MKDIR_P) hid/bom
	@: > hid/bom/$(am__dirstamp)
hid/bom/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hid/bom/$(DEPDIR)
	@: > hid/bom/$(DEPDIR)/$(am__dirstamp)
hid/bom/bom.$(OBJEXT): hid/bom/$(am__dirstamp) \
	hid/bom/$(DEPDIR)/$(am__dirstamp)
libbom.a: $(libbom_a_OBJECTS) $(libbom_a_DEPENDENCIES) $(EXTRA_libbom_a_DEPENDENCIES) 
	-rm -f libbom.a
	$(libbom_a_AR) libbom.a $(libbom_a_OBJECTS) $(libbom_a_LIBADD)
	$(RANLIB) libbom.a
hid/gcode/$(am__dirstamp):
	@$(MKDIR_P) hid/gcode
	@: > hid/gcode/$(am__dirstamp)
hid/gcode/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hid/gcode/$(DEPDIR)
	@: > hid/gcode/$(DEPDIR)/$(am__dirstamp)
hid/gcode/libgcode_a-gcode.$(OBJEXT): hid/gcode/$(am__dirstamp) \
	hid/gcode/$(DEPDIR)/$(am__dirstamp)
hid/gcode/libgcode_a-decompose.$(OBJEXT): hid/gcode/$(am__dirstamp) \
	hid/gcode/$(DEPDIR)/$(am__dirstamp)
hid/gcode/libgcode_a-trace.$(OBJEXT): hid/gcode/$(am__dirstamp) \
	hid/gcode/$(DEPDIR)/$(am__dirstamp)
hid/gcode/libgcode_a-curve.$(OBJEXT): hid/gcode/$(am__dirstamp) \
	hid/gcode/$(DEPDIR)/$(am__dirstamp)
libgcode.a: $(libgcode_a_OBJECTS) $(libgcode_a_DEPENDENCIES) $(EXTRA_libgcode_a_DEPENDENCIES) 
	-rm -f libgcode.a
	$(libgcode_a_AR) libgcode.a $(libgcode_a_OBJECTS) $(libgcode_a_LIBADD)
	$(RANLIB) libgcode.a
hid/gerber/$(am__dirstamp):
	@$(MKDIR_P) hid/gerber
	@: > hid/gerber/$(am__dirstamp)
hid/gerber/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hid/gerber/$(DEPDIR)
	@: > hid/gerber/$(DEPDIR)/$(am__dirstamp)
hid/gerber/gerber.$(OBJEXT): hid/gerber/$(am__dirstamp) \
	hid/gerber/$(DEPDIR)/$(am__dirstamp)
libgerber.a: $(libgerber_a_OBJECTS) $(libgerber_a_DEPENDENCIES) $(EXTRA_libgerber_a_DEPENDENCIES) 
	-rm -f libgerber.a
	$(libgerber_a_AR) libgerber.a $(libgerber_a_OBJECTS) $(libgerber_a_LIBADD)
	$(RANLIB) libgerber.a
hid/gtk/$(am__dirstamp):
	@$(MKDIR_P) hid/gtk
	@: > hid/gtk/$(am__dirstamp)
hid/gtk/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hid/gtk/$(DEPDIR)
	@: > hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-ghid-cell-renderer-visibility.$(OBJEXT):  \
	hid/gtk/$(am__dirstamp) hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-ghid-coord-entry.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-ghid-layer-selector.$(OBJEXT):  \
	hid/gtk/$(am__dirstamp) hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-ghid-main-menu.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-ghid-route-style-selector.$(OBJEXT):  \
	hid/gtk/$(am__dirstamp) hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gtkhid-main.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-command-window.$(OBJEXT):  \
	hid/gtk/$(am__dirstamp) hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-config.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-dialog-print.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-dialog.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-drc-window.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-keyref-window.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-library-window.$(OBJEXT):  \
	hid/gtk/$(am__dirstamp) hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-log-window.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-misc.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-netlist-window.$(OBJEXT):  \
	hid/gtk/$(am__dirstamp) hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-output-events.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-pinout-preview.$(OBJEXT):  \
	hid/gtk/$(am__dirstamp) hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-pinout-window.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-top-window.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-utils.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gtkhid-gl.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gui-trackball.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
hid/gtk/libgtk_a-gtkhid-gdk.$(OBJEXT): hid/gtk/$(am__dirstamp) \
	hid/gtk/$(DEPDIR)/$(am__dirstamp)
libgtk.a: $(libgtk_a_OBJECTS) $(libgtk_a_DEPENDENCIES) $(EXTRA_libgtk_a_DEPENDENCIES) 
	-rm -f libgtk.a
	$(libgtk_a_AR) libgtk.a $(libgtk_a_OBJECTS) $(libgtk_a_LIBADD)
	$(RANLIB) libgtk.a
hid/lesstif/$(am__dirstamp):
	@$(MKDIR_P) hid/lesstif
	@: > hid/lesstif/$(am__dirstamp)
hid/lesstif/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hid/lesstif/$(DEPDIR)
	@: > hid/lesstif/$(DEPDIR)/$(am__dirstamp)
hid/lesstif/liblesstif_a-dialogs.$(OBJEXT):  \
	hid/lesstif/$(am__dirstamp) \
	hid/lesstif/$(DEPDIR)/$(am__dirstamp)
hid/lesstif/liblesstif_a-library.$(OBJEXT):  \
	hid/lesstif/$(am__dirstamp) \
	hid/lesstif/$(DEPDIR)/$(am__dirstamp)
hid/lesstif/liblesstif_a-main.$(OBJEXT): hid/lesstif/$(am__dirstamp) \
	hid/lesstif/$(DEPDIR)/$(am__dirstamp)
hid/lesstif/liblesstif_a-menu.$(OBJEXT): hid/lesstif/$(am__dirstamp) \
	hid/lesstif/$(DEPDIR)/$(am__dirstamp)
hid/lesstif/liblesstif_a-netlist.$(OBJEXT):  \
	hid/lesstif/$(am__dirstamp) \
	hid/lesstif/$(DEPDIR)/$(am__dirstamp)
hid/lesstif/liblesstif_a-styles.$(OBJEXT):  \
	hid/lesstif/$(am__dirstamp) \
	hid/lesstif/$(DEPDIR)/$(am__dirstamp)
liblesstif.a: $(liblesstif_a_OBJECTS) $(liblesstif_a_DEPENDENCIES) $(EXTRA_liblesstif_a_DEPENDENCIES) 
	-rm -f liblesstif.a
	$(liblesstif_a_AR) liblesstif.a $(liblesstif_a_OBJECTS) $(liblesstif_a_LIBADD)
	$(RANLIB) liblesstif.a
hid/lpr/$(am__dirstamp):
	@$(MKDIR_P) hid/lpr
	@: > hid/lpr/$(am__dirstamp)
hid/lpr/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hid/lpr/$(DEPDIR)
	@: > hid/lpr/$(DEPDIR)/$(am__dirstamp)
hid/lpr/lpr.$(OBJEXT): hid/lpr/$(am__dirstamp) \
	hid/lpr/$(DEPDIR)/$(am__dirstamp)
liblpr.a: $(liblpr_a_OBJECTS) $(liblpr_a_DEPENDENCIES) $(EXTRA_liblpr_a_DEPENDENCIES) 
	-rm -f liblpr.a
	$(liblpr_a_AR) liblpr.a $(liblpr_a_OBJECTS) $(liblpr_a_LIBADD)
	$(RANLIB) liblpr.a
hid/nelma/$(am__dirstamp):
	@$(MKDIR_P) hid/nelma
	@: > hid/nelma/$(am__dirstamp)
hid/nelma/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hid/nelma/$(DEPDIR)
	@: > hid/nelma/$(DEPDIR)/$(am__dirstamp)
hid/nelma/libnelma_a-nelma.$(OBJEXT): hid/nelma/$(am__dirstamp) \
	hid/nelma/$(DEPDIR)/$(am__dirstamp)
libnelma.a: $(libnelma_a_OBJECTS) $(libnelma_a_DEPENDENCIES) $(EXTRA_libnelma_a_DEPENDENCIES) 
	-rm -f libnelma.a
	$(libnelma_a_AR) libnelma.a $(libnelma_a_OBJECTS) $(libnelma_a_LIBADD)
	$(RANLIB) libnelma.a
hid/png/$(am__dirstamp):
	@$(MKDIR_P) hid/png
	@: > hid/png/$(am__dirstamp)
hid/png/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hid/png/$(DEPDIR)
	@: > hid/png/$(DEPDIR)/$(am__dirstamp)
hid/png/libpng_a-png.$(OBJEXT): hid/png/$(am__dirstamp) \
	hid/png/$(DEPDIR)/$(am__dirstamp)
libpng.a: $(libpng_a_OBJECTS) $(libpng_a_DEPENDENCIES) $(EXTRA_libpng_a_DEPENDENCIES) 
	-rm -f libpng.a
	$(libpng_a_AR) libpng.a $(libpng_a_OBJECTS) $(libpng_a_LIBADD)
	$(RANLIB) libpng.a
hid/ps/$(am__dirstamp):
	@$(MKDIR_P) hid/ps
	@: > hid/ps/$(am__dirstamp)
hid/ps/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hid/ps/$(DEPDIR)
	@: > hid/ps/$(DEPDIR)/$(am__dirstamp)
hid/ps/libps_a-ps.$(OBJEXT): hid/ps/$(am__dirstamp) \
	hid/ps/$(DEPDIR)/$(am__dirstamp)
hid/ps/libps_a-eps.$(OBJEXT): hid/ps/$(am__dirstamp) \
	hid/ps/$(DEPDIR)/$(am__dirstamp)
libps.a: $(libps_a_OBJECTS) $(libps_a_DEPENDENCIES) $(EXTRA_libps_a_DEPENDENCIES) 
	-rm -f libps.a
	$(libps_a_AR) libps.a $(libps_a_OBJECTS) $(libps_a_LIBADD)
	$(RANLIB) libps.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
edif.h: edif.c
	@if test ! -f $@; then rm -f edif.c; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) edif.c; else :; fi
parse_y.h: parse_y.c
	@if test ! -f $@; then rm -f parse_y.c; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) parse_y.c; else :; fi
res_parse.h: res_parse.c
	@if test ! -f $@; then rm -f res_parse.c; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) res_parse.c; else :; fi
hid/common/$(am__dirstamp):
	@$(MKDIR_P) hid/common
	@: > hid/common/$(am__dirstamp)
hid/common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) hid/common/$(DEPDIR)
	@: > hid/common/$(DEPDIR)/$(am__dirstamp)
hid/common/actions.$(OBJEXT): hid/common/$(am__dirstamp) \
	hid/common/$(DEPDIR)/$(am__dirstamp)
hid/common/flags.$(OBJEXT): hid/common/$(am__dirstamp) \
	hid/common/$(DEPDIR)/$(am__dirstamp)
hid/common/hidinit.$(OBJEXT): hid/common/$(am__dirstamp) \
	hid/common/$(DEPDIR)/$(am__dirstamp)
hid/common/hidnogui.$(OBJEXT): hid/common/$(am__dirstamp) \
	hid/common/$(DEPDIR)/$(am__dirstamp)
hid/common/extents.$(OBJEXT): hid/common/$(am__dirstamp) \
	hid/common/$(DEPDIR)/$(am__dirstamp)
hid/common/draw_helpers.$(OBJEXT): hid/common/$(am__dirstamp) \
	hid/common/$(DEPDIR)/$(am__dirstamp)
hid/common/hid_resource.$(OBJEXT): hid/common/$(am__dirstamp) \
	hid/common/$(DEPDIR)/$(am__dirstamp)
hid/common/hidgl.$(OBJEXT): hid/common/$(am__dirstamp) \
	hid/common/$(DEPDIR)/$(am__dirstamp)
hid/common/trackball.$(OBJEXT): hid/common/$(am__dirstamp) \
	hid/common/$(DEPDIR)/$(am__dirstamp)
pcb$(EXEEXT): $(pcb_OBJECTS) $(pcb_DEPENDENCIES) $(EXTRA_pcb_DEPENDENCIES) 
	@rm -f pcb$(EXEEXT)
	$(LINK) $(pcb_OBJECTS) $(pcb_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f hid/batch/libbatch_a-batch.$(OBJEXT)
	-rm -f hid/bom/bom.$(OBJEXT)
	-rm -f hid/common/actions.$(OBJEXT)
	-rm -f hid/common/draw_helpers.$(OBJEXT)
	-rm -f hid/common/extents.$(OBJEXT)
	-rm -f hid/common/flags.$(OBJEXT)
	-rm -f hid/common/hid_resource.$(OBJEXT)
	-rm -f hid/common/hidgl.$(OBJEXT)
	-rm -f hid/common/hidinit.$(OBJEXT)
	-rm -f hid/common/hidnogui.$(OBJEXT)
	-rm -f hid/common/trackball.$(OBJEXT)
	-rm -f hid/gcode/libgcode_a-curve.$(OBJEXT)
	-rm -f hid/gcode/libgcode_a-decompose.$(OBJEXT)
	-rm -f hid/gcode/libgcode_a-gcode.$(OBJEXT)
	-rm -f hid/gcode/libgcode_a-trace.$(OBJEXT)
	-rm -f hid/gerber/gerber.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-ghid-cell-renderer-visibility.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-ghid-coord-entry.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-ghid-layer-selector.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-ghid-main-menu.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-ghid-route-style-selector.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gtkhid-gdk.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gtkhid-gl.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gtkhid-main.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-command-window.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-config.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-dialog-print.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-dialog.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-drc-window.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-keyref-window.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-library-window.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-log-window.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-misc.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-netlist-window.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-output-events.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-pinout-preview.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-pinout-window.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-top-window.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-trackball.$(OBJEXT)
	-rm -f hid/gtk/libgtk_a-gui-utils.$(OBJEXT)
	-rm -f hid/lesstif/liblesstif_a-dialogs.$(OBJEXT)
	-rm -f hid/lesstif/liblesstif_a-library.$(OBJEXT)
	-rm -f hid/lesstif/liblesstif_a-main.$(OBJEXT)
	-rm -f hid/lesstif/liblesstif_a-menu.$(OBJEXT)
	-rm -f hid/lesstif/liblesstif_a-netlist.$(OBJEXT)
	-rm -f hid/lesstif/liblesstif_a-styles.$(OBJEXT)
	-rm -f hid/lpr/lpr.$(OBJEXT)
	-rm -f hid/nelma/libnelma_a-nelma.$(OBJEXT)
	-rm -f hid/png/libpng_a-png.$(OBJEXT)
	-rm -f hid/ps/libps_a-eps.$(OBJEXT)
	-rm -f hid/ps/libps_a-ps.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/action.Po
include ./$(DEPDIR)/autoplace.Po
include ./$(DEPDIR)/autoroute.Po
include ./$(DEPDIR)/buffer.Po
include ./$(DEPDIR)/change.Po
include ./$(DEPDIR)/clip.Po
include ./$(DEPDIR)/command.Po
include ./$(DEPDIR)/compat.Po
include ./$(DEPDIR)/copy.Po
include ./$(DEPDIR)/create.Po
include ./$(DEPDIR)/crosshair.Po
include ./$(DEPDIR)/data.Po
include ./$(DEPDIR)/dbus-pcbmain.Po
include ./$(DEPDIR)/dbus.Po
include ./$(DEPDIR)/djopt.Po
include ./$(DEPDIR)/draw.Po
include ./$(DEPDIR)/drill.Po
include ./$(DEPDIR)/edif.Po
include ./$(DEPDIR)/error.Po
include ./$(DEPDIR)/file.Po
include ./$(DEPDIR)/find.Po
include ./$(DEPDIR)/flags.Po
include ./$(DEPDIR)/fontmode.Po
include ./$(DEPDIR)/free_atexit.Po
include ./$(DEPDIR)/heap.Po
include ./$(DEPDIR)/insert.Po
include ./$(DEPDIR)/intersect.Po
include ./$(DEPDIR)/line.Po
include ./$(DEPDIR)/lrealpath.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/mirror.Po
include ./$(DEPDIR)/misc.Po
include ./$(DEPDIR)/move.Po
include ./$(DEPDIR)/mtspace.Po
include ./$(DEPDIR)/mymem.Po
include ./$(DEPDIR)/netlist.Po
include ./$(DEPDIR)/parse_l.Po
include ./$(DEPDIR)/parse_y.Po
include ./$(DEPDIR)/pcb-printf.Po
include ./$(DEPDIR)/polygon.Po
include ./$(DEPDIR)/polygon1.Po
include ./$(DEPDIR)/print.Po
include ./$(DEPDIR)/puller.Po
include ./$(DEPDIR)/rats.Po
include ./$(DEPDIR)/remove.Po
include ./$(DEPDIR)/report.Po
include ./$(DEPDIR)/res_lex.Po
include ./$(DEPDIR)/res_parse.Po
include ./$(DEPDIR)/rotate.Po
include ./$(DEPDIR)/rtree.Po
include ./$(DEPDIR)/rubberband.Po
include ./$(DEPDIR)/search.Po
include ./$(DEPDIR)/select.Po
include ./$(DEPDIR)/set.Po
include ./$(DEPDIR)/strflags.Po
include ./$(DEPDIR)/thermal.Po
include ./$(DEPDIR)/toporouter.Po
include ./$(DEPDIR)/undo.Po
include ./$(DEPDIR)/vector.Po
include ./$(DEPDIR)/vendor.Po
include hid/batch/$(DEPDIR)/libbatch_a-batch.Po
include hid/bom/$(DEPDIR)/bom.Po
include hid/common/$(DEPDIR)/actions.Po
include hid/common/$(DEPDIR)/draw_helpers.Po
include hid/common/$(DEPDIR)/extents.Po
include hid/common/$(DEPDIR)/flags.Po
include hid/common/$(DEPDIR)/hid_resource.Po
include hid/common/$(DEPDIR)/hidgl.Po
include hid/common/$(DEPDIR)/hidinit.Po
include hid/common/$(DEPDIR)/hidnogui.Po
include hid/common/$(DEPDIR)/trackball.Po
include hid/gcode/$(DEPDIR)/libgcode_a-curve.Po
include hid/gcode/$(DEPDIR)/libgcode_a-decompose.Po
include hid/gcode/$(DEPDIR)/libgcode_a-gcode.Po
include hid/gcode/$(DEPDIR)/libgcode_a-trace.Po
include hid/gerber/$(DEPDIR)/gerber.Po
include hid/gtk/$(DEPDIR)/libgtk_a-ghid-cell-renderer-visibility.Po
include hid/gtk/$(DEPDIR)/libgtk_a-ghid-coord-entry.Po
include hid/gtk/$(DEPDIR)/libgtk_a-ghid-layer-selector.Po
include hid/gtk/$(DEPDIR)/libgtk_a-ghid-main-menu.Po
include hid/gtk/$(DEPDIR)/libgtk_a-ghid-route-style-selector.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-gdk.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-gl.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-main.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-command-window.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-config.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-dialog-print.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-dialog.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-drc-window.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-keyref-window.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-library-window.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-log-window.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-misc.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-netlist-window.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-output-events.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-pinout-preview.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-pinout-window.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-top-window.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-trackball.Po
include hid/gtk/$(DEPDIR)/libgtk_a-gui-utils.Po
include hid/lesstif/$(DEPDIR)/liblesstif_a-dialogs.Po
include hid/lesstif/$(DEPDIR)/liblesstif_a-library.Po
include hid/lesstif/$(DEPDIR)/liblesstif_a-main.Po
include hid/lesstif/$(DEPDIR)/liblesstif_a-menu.Po
include hid/lesstif/$(DEPDIR)/liblesstif_a-netlist.Po
include hid/lesstif/$(DEPDIR)/liblesstif_a-styles.Po
include hid/lpr/$(DEPDIR)/lpr.Po
include hid/nelma/$(DEPDIR)/libnelma_a-nelma.Po
include hid/png/$(DEPDIR)/libpng_a-png.Po
include hid/ps/$(DEPDIR)/libps_a-eps.Po
include hid/ps/$(DEPDIR)/libps_a-ps.Po

.c.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ $<

.c.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

hid/batch/libbatch_a-batch.o: hid/batch/batch.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbatch_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/batch/libbatch_a-batch.o -MD -MP -MF hid/batch/$(DEPDIR)/libbatch_a-batch.Tpo -c -o hid/batch/libbatch_a-batch.o `test -f 'hid/batch/batch.c' || echo '$(srcdir)/'`hid/batch/batch.c
	$(am__mv) hid/batch/$(DEPDIR)/libbatch_a-batch.Tpo hid/batch/$(DEPDIR)/libbatch_a-batch.Po
#	source='hid/batch/batch.c' object='hid/batch/libbatch_a-batch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbatch_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/batch/libbatch_a-batch.o `test -f 'hid/batch/batch.c' || echo '$(srcdir)/'`hid/batch/batch.c

hid/batch/libbatch_a-batch.obj: hid/batch/batch.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbatch_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/batch/libbatch_a-batch.obj -MD -MP -MF hid/batch/$(DEPDIR)/libbatch_a-batch.Tpo -c -o hid/batch/libbatch_a-batch.obj `if test -f 'hid/batch/batch.c'; then $(CYGPATH_W) 'hid/batch/batch.c'; else $(CYGPATH_W) '$(srcdir)/hid/batch/batch.c'; fi`
	$(am__mv) hid/batch/$(DEPDIR)/libbatch_a-batch.Tpo hid/batch/$(DEPDIR)/libbatch_a-batch.Po
#	source='hid/batch/batch.c' object='hid/batch/libbatch_a-batch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbatch_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/batch/libbatch_a-batch.obj `if test -f 'hid/batch/batch.c'; then $(CYGPATH_W) 'hid/batch/batch.c'; else $(CYGPATH_W) '$(srcdir)/hid/batch/batch.c'; fi`

hid/gcode/libgcode_a-gcode.o: hid/gcode/gcode.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gcode/libgcode_a-gcode.o -MD -MP -MF hid/gcode/$(DEPDIR)/libgcode_a-gcode.Tpo -c -o hid/gcode/libgcode_a-gcode.o `test -f 'hid/gcode/gcode.c' || echo '$(srcdir)/'`hid/gcode/gcode.c
	$(am__mv) hid/gcode/$(DEPDIR)/libgcode_a-gcode.Tpo hid/gcode/$(DEPDIR)/libgcode_a-gcode.Po
#	source='hid/gcode/gcode.c' object='hid/gcode/libgcode_a-gcode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gcode/libgcode_a-gcode.o `test -f 'hid/gcode/gcode.c' || echo '$(srcdir)/'`hid/gcode/gcode.c

hid/gcode/libgcode_a-gcode.obj: hid/gcode/gcode.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gcode/libgcode_a-gcode.obj -MD -MP -MF hid/gcode/$(DEPDIR)/libgcode_a-gcode.Tpo -c -o hid/gcode/libgcode_a-gcode.obj `if test -f 'hid/gcode/gcode.c'; then $(CYGPATH_W) 'hid/gcode/gcode.c'; else $(CYGPATH_W) '$(srcdir)/hid/gcode/gcode.c'; fi`
	$(am__mv) hid/gcode/$(DEPDIR)/libgcode_a-gcode.Tpo hid/gcode/$(DEPDIR)/libgcode_a-gcode.Po
#	source='hid/gcode/gcode.c' object='hid/gcode/libgcode_a-gcode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gcode/libgcode_a-gcode.obj `if test -f 'hid/gcode/gcode.c'; then $(CYGPATH_W) 'hid/gcode/gcode.c'; else $(CYGPATH_W) '$(srcdir)/hid/gcode/gcode.c'; fi`

hid/gcode/libgcode_a-decompose.o: hid/gcode/decompose.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gcode/libgcode_a-decompose.o -MD -MP -MF hid/gcode/$(DEPDIR)/libgcode_a-decompose.Tpo -c -o hid/gcode/libgcode_a-decompose.o `test -f 'hid/gcode/decompose.c' || echo '$(srcdir)/'`hid/gcode/decompose.c
	$(am__mv) hid/gcode/$(DEPDIR)/libgcode_a-decompose.Tpo hid/gcode/$(DEPDIR)/libgcode_a-decompose.Po
#	source='hid/gcode/decompose.c' object='hid/gcode/libgcode_a-decompose.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gcode/libgcode_a-decompose.o `test -f 'hid/gcode/decompose.c' || echo '$(srcdir)/'`hid/gcode/decompose.c

hid/gcode/libgcode_a-decompose.obj: hid/gcode/decompose.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gcode/libgcode_a-decompose.obj -MD -MP -MF hid/gcode/$(DEPDIR)/libgcode_a-decompose.Tpo -c -o hid/gcode/libgcode_a-decompose.obj `if test -f 'hid/gcode/decompose.c'; then $(CYGPATH_W) 'hid/gcode/decompose.c'; else $(CYGPATH_W) '$(srcdir)/hid/gcode/decompose.c'; fi`
	$(am__mv) hid/gcode/$(DEPDIR)/libgcode_a-decompose.Tpo hid/gcode/$(DEPDIR)/libgcode_a-decompose.Po
#	source='hid/gcode/decompose.c' object='hid/gcode/libgcode_a-decompose.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gcode/libgcode_a-decompose.obj `if test -f 'hid/gcode/decompose.c'; then $(CYGPATH_W) 'hid/gcode/decompose.c'; else $(CYGPATH_W) '$(srcdir)/hid/gcode/decompose.c'; fi`

hid/gcode/libgcode_a-trace.o: hid/gcode/trace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gcode/libgcode_a-trace.o -MD -MP -MF hid/gcode/$(DEPDIR)/libgcode_a-trace.Tpo -c -o hid/gcode/libgcode_a-trace.o `test -f 'hid/gcode/trace.c' || echo '$(srcdir)/'`hid/gcode/trace.c
	$(am__mv) hid/gcode/$(DEPDIR)/libgcode_a-trace.Tpo hid/gcode/$(DEPDIR)/libgcode_a-trace.Po
#	source='hid/gcode/trace.c' object='hid/gcode/libgcode_a-trace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gcode/libgcode_a-trace.o `test -f 'hid/gcode/trace.c' || echo '$(srcdir)/'`hid/gcode/trace.c

hid/gcode/libgcode_a-trace.obj: hid/gcode/trace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gcode/libgcode_a-trace.obj -MD -MP -MF hid/gcode/$(DEPDIR)/libgcode_a-trace.Tpo -c -o hid/gcode/libgcode_a-trace.obj `if test -f 'hid/gcode/trace.c'; then $(CYGPATH_W) 'hid/gcode/trace.c'; else $(CYGPATH_W) '$(srcdir)/hid/gcode/trace.c'; fi`
	$(am__mv) hid/gcode/$(DEPDIR)/libgcode_a-trace.Tpo hid/gcode/$(DEPDIR)/libgcode_a-trace.Po
#	source='hid/gcode/trace.c' object='hid/gcode/libgcode_a-trace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gcode/libgcode_a-trace.obj `if test -f 'hid/gcode/trace.c'; then $(CYGPATH_W) 'hid/gcode/trace.c'; else $(CYGPATH_W) '$(srcdir)/hid/gcode/trace.c'; fi`

hid/gcode/libgcode_a-curve.o: hid/gcode/curve.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gcode/libgcode_a-curve.o -MD -MP -MF hid/gcode/$(DEPDIR)/libgcode_a-curve.Tpo -c -o hid/gcode/libgcode_a-curve.o `test -f 'hid/gcode/curve.c' || echo '$(srcdir)/'`hid/gcode/curve.c
	$(am__mv) hid/gcode/$(DEPDIR)/libgcode_a-curve.Tpo hid/gcode/$(DEPDIR)/libgcode_a-curve.Po
#	source='hid/gcode/curve.c' object='hid/gcode/libgcode_a-curve.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gcode/libgcode_a-curve.o `test -f 'hid/gcode/curve.c' || echo '$(srcdir)/'`hid/gcode/curve.c

hid/gcode/libgcode_a-curve.obj: hid/gcode/curve.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gcode/libgcode_a-curve.obj -MD -MP -MF hid/gcode/$(DEPDIR)/libgcode_a-curve.Tpo -c -o hid/gcode/libgcode_a-curve.obj `if test -f 'hid/gcode/curve.c'; then $(CYGPATH_W) 'hid/gcode/curve.c'; else $(CYGPATH_W) '$(srcdir)/hid/gcode/curve.c'; fi`
	$(am__mv) hid/gcode/$(DEPDIR)/libgcode_a-curve.Tpo hid/gcode/$(DEPDIR)/libgcode_a-curve.Po
#	source='hid/gcode/curve.c' object='hid/gcode/libgcode_a-curve.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgcode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gcode/libgcode_a-curve.obj `if test -f 'hid/gcode/curve.c'; then $(CYGPATH_W) 'hid/gcode/curve.c'; else $(CYGPATH_W) '$(srcdir)/hid/gcode/curve.c'; fi`

hid/gtk/libgtk_a-ghid-cell-renderer-visibility.o: hid/gtk/ghid-cell-renderer-visibility.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-ghid-cell-renderer-visibility.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-ghid-cell-renderer-visibility.Tpo -c -o hid/gtk/libgtk_a-ghid-cell-renderer-visibility.o `test -f 'hid/gtk/ghid-cell-renderer-visibility.c' || echo '$(srcdir)/'`hid/gtk/ghid-cell-renderer-visibility.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-ghid-cell-renderer-visibility.Tpo hid/gtk/$(DEPDIR)/libgtk_a-ghid-cell-renderer-visibility.Po
#	source='hid/gtk/ghid-cell-renderer-visibility.c' object='hid/gtk/libgtk_a-ghid-cell-renderer-visibility.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-ghid-cell-renderer-visibility.o `test -f 'hid/gtk/ghid-cell-renderer-visibility.c' || echo '$(srcdir)/'`hid/gtk/ghid-cell-renderer-visibility.c

hid/gtk/libgtk_a-ghid-cell-renderer-visibility.obj: hid/gtk/ghid-cell-renderer-visibility.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-ghid-cell-renderer-visibility.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-ghid-cell-renderer-visibility.Tpo -c -o hid/gtk/libgtk_a-ghid-cell-renderer-visibility.obj `if test -f 'hid/gtk/ghid-cell-renderer-visibility.c'; then $(CYGPATH_W) 'hid/gtk/ghid-cell-renderer-visibility.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/ghid-cell-renderer-visibility.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-ghid-cell-renderer-visibility.Tpo hid/gtk/$(DEPDIR)/libgtk_a-ghid-cell-renderer-visibility.Po
#	source='hid/gtk/ghid-cell-renderer-visibility.c' object='hid/gtk/libgtk_a-ghid-cell-renderer-visibility.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-ghid-cell-renderer-visibility.obj `if test -f 'hid/gtk/ghid-cell-renderer-visibility.c'; then $(CYGPATH_W) 'hid/gtk/ghid-cell-renderer-visibility.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/ghid-cell-renderer-visibility.c'; fi`

hid/gtk/libgtk_a-ghid-coord-entry.o: hid/gtk/ghid-coord-entry.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-ghid-coord-entry.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-ghid-coord-entry.Tpo -c -o hid/gtk/libgtk_a-ghid-coord-entry.o `test -f 'hid/gtk/ghid-coord-entry.c' || echo '$(srcdir)/'`hid/gtk/ghid-coord-entry.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-ghid-coord-entry.Tpo hid/gtk/$(DEPDIR)/libgtk_a-ghid-coord-entry.Po
#	source='hid/gtk/ghid-coord-entry.c' object='hid/gtk/libgtk_a-ghid-coord-entry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-ghid-coord-entry.o `test -f 'hid/gtk/ghid-coord-entry.c' || echo '$(srcdir)/'`hid/gtk/ghid-coord-entry.c

hid/gtk/libgtk_a-ghid-coord-entry.obj: hid/gtk/ghid-coord-entry.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-ghid-coord-entry.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-ghid-coord-entry.Tpo -c -o hid/gtk/libgtk_a-ghid-coord-entry.obj `if test -f 'hid/gtk/ghid-coord-entry.c'; then $(CYGPATH_W) 'hid/gtk/ghid-coord-entry.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/ghid-coord-entry.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-ghid-coord-entry.Tpo hid/gtk/$(DEPDIR)/libgtk_a-ghid-coord-entry.Po
#	source='hid/gtk/ghid-coord-entry.c' object='hid/gtk/libgtk_a-ghid-coord-entry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-ghid-coord-entry.obj `if test -f 'hid/gtk/ghid-coord-entry.c'; then $(CYGPATH_W) 'hid/gtk/ghid-coord-entry.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/ghid-coord-entry.c'; fi`

hid/gtk/libgtk_a-ghid-layer-selector.o: hid/gtk/ghid-layer-selector.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-ghid-layer-selector.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-ghid-layer-selector.Tpo -c -o hid/gtk/libgtk_a-ghid-layer-selector.o `test -f 'hid/gtk/ghid-layer-selector.c' || echo '$(srcdir)/'`hid/gtk/ghid-layer-selector.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-ghid-layer-selector.Tpo hid/gtk/$(DEPDIR)/libgtk_a-ghid-layer-selector.Po
#	source='hid/gtk/ghid-layer-selector.c' object='hid/gtk/libgtk_a-ghid-layer-selector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-ghid-layer-selector.o `test -f 'hid/gtk/ghid-layer-selector.c' || echo '$(srcdir)/'`hid/gtk/ghid-layer-selector.c

hid/gtk/libgtk_a-ghid-layer-selector.obj: hid/gtk/ghid-layer-selector.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-ghid-layer-selector.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-ghid-layer-selector.Tpo -c -o hid/gtk/libgtk_a-ghid-layer-selector.obj `if test -f 'hid/gtk/ghid-layer-selector.c'; then $(CYGPATH_W) 'hid/gtk/ghid-layer-selector.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/ghid-layer-selector.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-ghid-layer-selector.Tpo hid/gtk/$(DEPDIR)/libgtk_a-ghid-layer-selector.Po
#	source='hid/gtk/ghid-layer-selector.c' object='hid/gtk/libgtk_a-ghid-layer-selector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-ghid-layer-selector.obj `if test -f 'hid/gtk/ghid-layer-selector.c'; then $(CYGPATH_W) 'hid/gtk/ghid-layer-selector.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/ghid-layer-selector.c'; fi`

hid/gtk/libgtk_a-ghid-main-menu.o: hid/gtk/ghid-main-menu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-ghid-main-menu.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-ghid-main-menu.Tpo -c -o hid/gtk/libgtk_a-ghid-main-menu.o `test -f 'hid/gtk/ghid-main-menu.c' || echo '$(srcdir)/'`hid/gtk/ghid-main-menu.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-ghid-main-menu.Tpo hid/gtk/$(DEPDIR)/libgtk_a-ghid-main-menu.Po
#	source='hid/gtk/ghid-main-menu.c' object='hid/gtk/libgtk_a-ghid-main-menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-ghid-main-menu.o `test -f 'hid/gtk/ghid-main-menu.c' || echo '$(srcdir)/'`hid/gtk/ghid-main-menu.c

hid/gtk/libgtk_a-ghid-main-menu.obj: hid/gtk/ghid-main-menu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-ghid-main-menu.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-ghid-main-menu.Tpo -c -o hid/gtk/libgtk_a-ghid-main-menu.obj `if test -f 'hid/gtk/ghid-main-menu.c'; then $(CYGPATH_W) 'hid/gtk/ghid-main-menu.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/ghid-main-menu.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-ghid-main-menu.Tpo hid/gtk/$(DEPDIR)/libgtk_a-ghid-main-menu.Po
#	source='hid/gtk/ghid-main-menu.c' object='hid/gtk/libgtk_a-ghid-main-menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-ghid-main-menu.obj `if test -f 'hid/gtk/ghid-main-menu.c'; then $(CYGPATH_W) 'hid/gtk/ghid-main-menu.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/ghid-main-menu.c'; fi`

hid/gtk/libgtk_a-ghid-route-style-selector.o: hid/gtk/ghid-route-style-selector.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-ghid-route-style-selector.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-ghid-route-style-selector.Tpo -c -o hid/gtk/libgtk_a-ghid-route-style-selector.o `test -f 'hid/gtk/ghid-route-style-selector.c' || echo '$(srcdir)/'`hid/gtk/ghid-route-style-selector.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-ghid-route-style-selector.Tpo hid/gtk/$(DEPDIR)/libgtk_a-ghid-route-style-selector.Po
#	source='hid/gtk/ghid-route-style-selector.c' object='hid/gtk/libgtk_a-ghid-route-style-selector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-ghid-route-style-selector.o `test -f 'hid/gtk/ghid-route-style-selector.c' || echo '$(srcdir)/'`hid/gtk/ghid-route-style-selector.c

hid/gtk/libgtk_a-ghid-route-style-selector.obj: hid/gtk/ghid-route-style-selector.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-ghid-route-style-selector.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-ghid-route-style-selector.Tpo -c -o hid/gtk/libgtk_a-ghid-route-style-selector.obj `if test -f 'hid/gtk/ghid-route-style-selector.c'; then $(CYGPATH_W) 'hid/gtk/ghid-route-style-selector.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/ghid-route-style-selector.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-ghid-route-style-selector.Tpo hid/gtk/$(DEPDIR)/libgtk_a-ghid-route-style-selector.Po
#	source='hid/gtk/ghid-route-style-selector.c' object='hid/gtk/libgtk_a-ghid-route-style-selector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-ghid-route-style-selector.obj `if test -f 'hid/gtk/ghid-route-style-selector.c'; then $(CYGPATH_W) 'hid/gtk/ghid-route-style-selector.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/ghid-route-style-selector.c'; fi`

hid/gtk/libgtk_a-gtkhid-main.o: hid/gtk/gtkhid-main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gtkhid-main.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-main.Tpo -c -o hid/gtk/libgtk_a-gtkhid-main.o `test -f 'hid/gtk/gtkhid-main.c' || echo '$(srcdir)/'`hid/gtk/gtkhid-main.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-main.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-main.Po
#	source='hid/gtk/gtkhid-main.c' object='hid/gtk/libgtk_a-gtkhid-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gtkhid-main.o `test -f 'hid/gtk/gtkhid-main.c' || echo '$(srcdir)/'`hid/gtk/gtkhid-main.c

hid/gtk/libgtk_a-gtkhid-main.obj: hid/gtk/gtkhid-main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gtkhid-main.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-main.Tpo -c -o hid/gtk/libgtk_a-gtkhid-main.obj `if test -f 'hid/gtk/gtkhid-main.c'; then $(CYGPATH_W) 'hid/gtk/gtkhid-main.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gtkhid-main.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-main.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-main.Po
#	source='hid/gtk/gtkhid-main.c' object='hid/gtk/libgtk_a-gtkhid-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gtkhid-main.obj `if test -f 'hid/gtk/gtkhid-main.c'; then $(CYGPATH_W) 'hid/gtk/gtkhid-main.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gtkhid-main.c'; fi`

hid/gtk/libgtk_a-gui-command-window.o: hid/gtk/gui-command-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-command-window.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-command-window.Tpo -c -o hid/gtk/libgtk_a-gui-command-window.o `test -f 'hid/gtk/gui-command-window.c' || echo '$(srcdir)/'`hid/gtk/gui-command-window.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-command-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-command-window.Po
#	source='hid/gtk/gui-command-window.c' object='hid/gtk/libgtk_a-gui-command-window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-command-window.o `test -f 'hid/gtk/gui-command-window.c' || echo '$(srcdir)/'`hid/gtk/gui-command-window.c

hid/gtk/libgtk_a-gui-command-window.obj: hid/gtk/gui-command-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-command-window.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-command-window.Tpo -c -o hid/gtk/libgtk_a-gui-command-window.obj `if test -f 'hid/gtk/gui-command-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-command-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-command-window.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-command-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-command-window.Po
#	source='hid/gtk/gui-command-window.c' object='hid/gtk/libgtk_a-gui-command-window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-command-window.obj `if test -f 'hid/gtk/gui-command-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-command-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-command-window.c'; fi`

hid/gtk/libgtk_a-gui-config.o: hid/gtk/gui-config.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-config.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-config.Tpo -c -o hid/gtk/libgtk_a-gui-config.o `test -f 'hid/gtk/gui-config.c' || echo '$(srcdir)/'`hid/gtk/gui-config.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-config.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-config.Po
#	source='hid/gtk/gui-config.c' object='hid/gtk/libgtk_a-gui-config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-config.o `test -f 'hid/gtk/gui-config.c' || echo '$(srcdir)/'`hid/gtk/gui-config.c

hid/gtk/libgtk_a-gui-config.obj: hid/gtk/gui-config.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-config.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-config.Tpo -c -o hid/gtk/libgtk_a-gui-config.obj `if test -f 'hid/gtk/gui-config.c'; then $(CYGPATH_W) 'hid/gtk/gui-config.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-config.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-config.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-config.Po
#	source='hid/gtk/gui-config.c' object='hid/gtk/libgtk_a-gui-config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-config.obj `if test -f 'hid/gtk/gui-config.c'; then $(CYGPATH_W) 'hid/gtk/gui-config.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-config.c'; fi`

hid/gtk/libgtk_a-gui-dialog-print.o: hid/gtk/gui-dialog-print.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-dialog-print.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-dialog-print.Tpo -c -o hid/gtk/libgtk_a-gui-dialog-print.o `test -f 'hid/gtk/gui-dialog-print.c' || echo '$(srcdir)/'`hid/gtk/gui-dialog-print.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-dialog-print.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-dialog-print.Po
#	source='hid/gtk/gui-dialog-print.c' object='hid/gtk/libgtk_a-gui-dialog-print.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-dialog-print.o `test -f 'hid/gtk/gui-dialog-print.c' || echo '$(srcdir)/'`hid/gtk/gui-dialog-print.c

hid/gtk/libgtk_a-gui-dialog-print.obj: hid/gtk/gui-dialog-print.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-dialog-print.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-dialog-print.Tpo -c -o hid/gtk/libgtk_a-gui-dialog-print.obj `if test -f 'hid/gtk/gui-dialog-print.c'; then $(CYGPATH_W) 'hid/gtk/gui-dialog-print.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-dialog-print.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-dialog-print.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-dialog-print.Po
#	source='hid/gtk/gui-dialog-print.c' object='hid/gtk/libgtk_a-gui-dialog-print.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-dialog-print.obj `if test -f 'hid/gtk/gui-dialog-print.c'; then $(CYGPATH_W) 'hid/gtk/gui-dialog-print.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-dialog-print.c'; fi`

hid/gtk/libgtk_a-gui-dialog.o: hid/gtk/gui-dialog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-dialog.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-dialog.Tpo -c -o hid/gtk/libgtk_a-gui-dialog.o `test -f 'hid/gtk/gui-dialog.c' || echo '$(srcdir)/'`hid/gtk/gui-dialog.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-dialog.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-dialog.Po
#	source='hid/gtk/gui-dialog.c' object='hid/gtk/libgtk_a-gui-dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-dialog.o `test -f 'hid/gtk/gui-dialog.c' || echo '$(srcdir)/'`hid/gtk/gui-dialog.c

hid/gtk/libgtk_a-gui-dialog.obj: hid/gtk/gui-dialog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-dialog.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-dialog.Tpo -c -o hid/gtk/libgtk_a-gui-dialog.obj `if test -f 'hid/gtk/gui-dialog.c'; then $(CYGPATH_W) 'hid/gtk/gui-dialog.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-dialog.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-dialog.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-dialog.Po
#	source='hid/gtk/gui-dialog.c' object='hid/gtk/libgtk_a-gui-dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-dialog.obj `if test -f 'hid/gtk/gui-dialog.c'; then $(CYGPATH_W) 'hid/gtk/gui-dialog.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-dialog.c'; fi`

hid/gtk/libgtk_a-gui-drc-window.o: hid/gtk/gui-drc-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-drc-window.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-drc-window.Tpo -c -o hid/gtk/libgtk_a-gui-drc-window.o `test -f 'hid/gtk/gui-drc-window.c' || echo '$(srcdir)/'`hid/gtk/gui-drc-window.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-drc-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-drc-window.Po
#	source='hid/gtk/gui-drc-window.c' object='hid/gtk/libgtk_a-gui-drc-window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-drc-window.o `test -f 'hid/gtk/gui-drc-window.c' || echo '$(srcdir)/'`hid/gtk/gui-drc-window.c

hid/gtk/libgtk_a-gui-drc-window.obj: hid/gtk/gui-drc-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-drc-window.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-drc-window.Tpo -c -o hid/gtk/libgtk_a-gui-drc-window.obj `if test -f 'hid/gtk/gui-drc-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-drc-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-drc-window.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-drc-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-drc-window.Po
#	source='hid/gtk/gui-drc-window.c' object='hid/gtk/libgtk_a-gui-drc-window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-drc-window.obj `if test -f 'hid/gtk/gui-drc-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-drc-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-drc-window.c'; fi`

hid/gtk/libgtk_a-gui-keyref-window.o: hid/gtk/gui-keyref-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-keyref-window.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-keyref-window.Tpo -c -o hid/gtk/libgtk_a-gui-keyref-window.o `test -f 'hid/gtk/gui-keyref-window.c' || echo '$(srcdir)/'`hid/gtk/gui-keyref-window.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-keyref-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-keyref-window.Po
#	source='hid/gtk/gui-keyref-window.c' object='hid/gtk/libgtk_a-gui-keyref-window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-keyref-window.o `test -f 'hid/gtk/gui-keyref-window.c' || echo '$(srcdir)/'`hid/gtk/gui-keyref-window.c

hid/gtk/libgtk_a-gui-keyref-window.obj: hid/gtk/gui-keyref-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-keyref-window.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-keyref-window.Tpo -c -o hid/gtk/libgtk_a-gui-keyref-window.obj `if test -f 'hid/gtk/gui-keyref-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-keyref-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-keyref-window.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-keyref-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-keyref-window.Po
#	source='hid/gtk/gui-keyref-window.c' object='hid/gtk/libgtk_a-gui-keyref-window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-keyref-window.obj `if test -f 'hid/gtk/gui-keyref-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-keyref-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-keyref-window.c'; fi`

hid/gtk/libgtk_a-gui-library-window.o: hid/gtk/gui-library-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-library-window.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-library-window.Tpo -c -o hid/gtk/libgtk_a-gui-library-window.o `test -f 'hid/gtk/gui-library-window.c' || echo '$(srcdir)/'`hid/gtk/gui-library-window.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-library-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-library-window.Po
#	source='hid/gtk/gui-library-window.c' object='hid/gtk/libgtk_a-gui-library-window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-library-window.o `test -f 'hid/gtk/gui-library-window.c' || echo '$(srcdir)/'`hid/gtk/gui-library-window.c

hid/gtk/libgtk_a-gui-library-window.obj: hid/gtk/gui-library-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-library-window.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-library-window.Tpo -c -o hid/gtk/libgtk_a-gui-library-window.obj `if test -f 'hid/gtk/gui-library-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-library-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-library-window.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-library-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-library-window.Po
#	source='hid/gtk/gui-library-window.c' object='hid/gtk/libgtk_a-gui-library-window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-library-window.obj `if test -f 'hid/gtk/gui-library-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-library-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-library-window.c'; fi`

hid/gtk/libgtk_a-gui-log-window.o: hid/gtk/gui-log-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-log-window.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-log-window.Tpo -c -o hid/gtk/libgtk_a-gui-log-window.o `test -f 'hid/gtk/gui-log-window.c' || echo '$(srcdir)/'`hid/gtk/gui-log-window.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-log-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-log-window.Po
#	source='hid/gtk/gui-log-window.c' object='hid/gtk/libgtk_a-gui-log-window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-log-window.o `test -f 'hid/gtk/gui-log-window.c' || echo '$(srcdir)/'`hid/gtk/gui-log-window.c

hid/gtk/libgtk_a-gui-log-window.obj: hid/gtk/gui-log-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-log-window.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-log-window.Tpo -c -o hid/gtk/libgtk_a-gui-log-window.obj `if test -f 'hid/gtk/gui-log-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-log-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-log-window.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-log-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-log-window.Po
#	source='hid/gtk/gui-log-window.c' object='hid/gtk/libgtk_a-gui-log-window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-log-window.obj `if test -f 'hid/gtk/gui-log-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-log-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-log-window.c'; fi`

hid/gtk/libgtk_a-gui-misc.o: hid/gtk/gui-misc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-misc.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-misc.Tpo -c -o hid/gtk/libgtk_a-gui-misc.o `test -f 'hid/gtk/gui-misc.c' || echo '$(srcdir)/'`hid/gtk/gui-misc.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-misc.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-misc.Po
#	source='hid/gtk/gui-misc.c' object='hid/gtk/libgtk_a-gui-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-misc.o `test -f 'hid/gtk/gui-misc.c' || echo '$(srcdir)/'`hid/gtk/gui-misc.c

hid/gtk/libgtk_a-gui-misc.obj: hid/gtk/gui-misc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-misc.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-misc.Tpo -c -o hid/gtk/libgtk_a-gui-misc.obj `if test -f 'hid/gtk/gui-misc.c'; then $(CYGPATH_W) 'hid/gtk/gui-misc.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-misc.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-misc.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-misc.Po
#	source='hid/gtk/gui-misc.c' object='hid/gtk/libgtk_a-gui-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-misc.obj `if test -f 'hid/gtk/gui-misc.c'; then $(CYGPATH_W) 'hid/gtk/gui-misc.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-misc.c'; fi`

hid/gtk/libgtk_a-gui-netlist-window.o: hid/gtk/gui-netlist-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-netlist-window.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-netlist-window.Tpo -c -o hid/gtk/libgtk_a-gui-netlist-window.o `test -f 'hid/gtk/gui-netlist-window.c' || echo '$(srcdir)/'`hid/gtk/gui-netlist-window.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-netlist-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-netlist-window.Po
#	source='hid/gtk/gui-netlist-window.c' object='hid/gtk/libgtk_a-gui-netlist-window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-netlist-window.o `test -f 'hid/gtk/gui-netlist-window.c' || echo '$(srcdir)/'`hid/gtk/gui-netlist-window.c

hid/gtk/libgtk_a-gui-netlist-window.obj: hid/gtk/gui-netlist-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-netlist-window.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-netlist-window.Tpo -c -o hid/gtk/libgtk_a-gui-netlist-window.obj `if test -f 'hid/gtk/gui-netlist-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-netlist-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-netlist-window.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-netlist-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-netlist-window.Po
#	source='hid/gtk/gui-netlist-window.c' object='hid/gtk/libgtk_a-gui-netlist-window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-netlist-window.obj `if test -f 'hid/gtk/gui-netlist-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-netlist-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-netlist-window.c'; fi`

hid/gtk/libgtk_a-gui-output-events.o: hid/gtk/gui-output-events.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-output-events.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-output-events.Tpo -c -o hid/gtk/libgtk_a-gui-output-events.o `test -f 'hid/gtk/gui-output-events.c' || echo '$(srcdir)/'`hid/gtk/gui-output-events.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-output-events.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-output-events.Po
#	source='hid/gtk/gui-output-events.c' object='hid/gtk/libgtk_a-gui-output-events.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-output-events.o `test -f 'hid/gtk/gui-output-events.c' || echo '$(srcdir)/'`hid/gtk/gui-output-events.c

hid/gtk/libgtk_a-gui-output-events.obj: hid/gtk/gui-output-events.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-output-events.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-output-events.Tpo -c -o hid/gtk/libgtk_a-gui-output-events.obj `if test -f 'hid/gtk/gui-output-events.c'; then $(CYGPATH_W) 'hid/gtk/gui-output-events.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-output-events.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-output-events.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-output-events.Po
#	source='hid/gtk/gui-output-events.c' object='hid/gtk/libgtk_a-gui-output-events.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-output-events.obj `if test -f 'hid/gtk/gui-output-events.c'; then $(CYGPATH_W) 'hid/gtk/gui-output-events.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-output-events.c'; fi`

hid/gtk/libgtk_a-gui-pinout-preview.o: hid/gtk/gui-pinout-preview.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-pinout-preview.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-pinout-preview.Tpo -c -o hid/gtk/libgtk_a-gui-pinout-preview.o `test -f 'hid/gtk/gui-pinout-preview.c' || echo '$(srcdir)/'`hid/gtk/gui-pinout-preview.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-pinout-preview.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-pinout-preview.Po
#	source='hid/gtk/gui-pinout-preview.c' object='hid/gtk/libgtk_a-gui-pinout-preview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-pinout-preview.o `test -f 'hid/gtk/gui-pinout-preview.c' || echo '$(srcdir)/'`hid/gtk/gui-pinout-preview.c

hid/gtk/libgtk_a-gui-pinout-preview.obj: hid/gtk/gui-pinout-preview.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-pinout-preview.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-pinout-preview.Tpo -c -o hid/gtk/libgtk_a-gui-pinout-preview.obj `if test -f 'hid/gtk/gui-pinout-preview.c'; then $(CYGPATH_W) 'hid/gtk/gui-pinout-preview.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-pinout-preview.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-pinout-preview.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-pinout-preview.Po
#	source='hid/gtk/gui-pinout-preview.c' object='hid/gtk/libgtk_a-gui-pinout-preview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-pinout-preview.obj `if test -f 'hid/gtk/gui-pinout-preview.c'; then $(CYGPATH_W) 'hid/gtk/gui-pinout-preview.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-pinout-preview.c'; fi`

hid/gtk/libgtk_a-gui-pinout-window.o: hid/gtk/gui-pinout-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-pinout-window.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-pinout-window.Tpo -c -o hid/gtk/libgtk_a-gui-pinout-window.o `test -f 'hid/gtk/gui-pinout-window.c' || echo '$(srcdir)/'`hid/gtk/gui-pinout-window.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-pinout-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-pinout-window.Po
#	source='hid/gtk/gui-pinout-window.c' object='hid/gtk/libgtk_a-gui-pinout-window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-pinout-window.o `test -f 'hid/gtk/gui-pinout-window.c' || echo '$(srcdir)/'`hid/gtk/gui-pinout-window.c

hid/gtk/libgtk_a-gui-pinout-window.obj: hid/gtk/gui-pinout-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-pinout-window.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-pinout-window.Tpo -c -o hid/gtk/libgtk_a-gui-pinout-window.obj `if test -f 'hid/gtk/gui-pinout-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-pinout-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-pinout-window.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-pinout-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-pinout-window.Po
#	source='hid/gtk/gui-pinout-window.c' object='hid/gtk/libgtk_a-gui-pinout-window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-pinout-window.obj `if test -f 'hid/gtk/gui-pinout-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-pinout-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-pinout-window.c'; fi`

hid/gtk/libgtk_a-gui-top-window.o: hid/gtk/gui-top-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-top-window.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-top-window.Tpo -c -o hid/gtk/libgtk_a-gui-top-window.o `test -f 'hid/gtk/gui-top-window.c' || echo '$(srcdir)/'`hid/gtk/gui-top-window.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-top-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-top-window.Po
#	source='hid/gtk/gui-top-window.c' object='hid/gtk/libgtk_a-gui-top-window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-top-window.o `test -f 'hid/gtk/gui-top-window.c' || echo '$(srcdir)/'`hid/gtk/gui-top-window.c

hid/gtk/libgtk_a-gui-top-window.obj: hid/gtk/gui-top-window.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-top-window.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-top-window.Tpo -c -o hid/gtk/libgtk_a-gui-top-window.obj `if test -f 'hid/gtk/gui-top-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-top-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-top-window.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-top-window.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-top-window.Po
#	source='hid/gtk/gui-top-window.c' object='hid/gtk/libgtk_a-gui-top-window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-top-window.obj `if test -f 'hid/gtk/gui-top-window.c'; then $(CYGPATH_W) 'hid/gtk/gui-top-window.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-top-window.c'; fi`

hid/gtk/libgtk_a-gui-utils.o: hid/gtk/gui-utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-utils.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-utils.Tpo -c -o hid/gtk/libgtk_a-gui-utils.o `test -f 'hid/gtk/gui-utils.c' || echo '$(srcdir)/'`hid/gtk/gui-utils.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-utils.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-utils.Po
#	source='hid/gtk/gui-utils.c' object='hid/gtk/libgtk_a-gui-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-utils.o `test -f 'hid/gtk/gui-utils.c' || echo '$(srcdir)/'`hid/gtk/gui-utils.c

hid/gtk/libgtk_a-gui-utils.obj: hid/gtk/gui-utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-utils.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-utils.Tpo -c -o hid/gtk/libgtk_a-gui-utils.obj `if test -f 'hid/gtk/gui-utils.c'; then $(CYGPATH_W) 'hid/gtk/gui-utils.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-utils.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-utils.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-utils.Po
#	source='hid/gtk/gui-utils.c' object='hid/gtk/libgtk_a-gui-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-utils.obj `if test -f 'hid/gtk/gui-utils.c'; then $(CYGPATH_W) 'hid/gtk/gui-utils.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-utils.c'; fi`

hid/gtk/libgtk_a-gtkhid-gl.o: hid/gtk/gtkhid-gl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gtkhid-gl.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-gl.Tpo -c -o hid/gtk/libgtk_a-gtkhid-gl.o `test -f 'hid/gtk/gtkhid-gl.c' || echo '$(srcdir)/'`hid/gtk/gtkhid-gl.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-gl.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-gl.Po
#	source='hid/gtk/gtkhid-gl.c' object='hid/gtk/libgtk_a-gtkhid-gl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gtkhid-gl.o `test -f 'hid/gtk/gtkhid-gl.c' || echo '$(srcdir)/'`hid/gtk/gtkhid-gl.c

hid/gtk/libgtk_a-gtkhid-gl.obj: hid/gtk/gtkhid-gl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gtkhid-gl.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-gl.Tpo -c -o hid/gtk/libgtk_a-gtkhid-gl.obj `if test -f 'hid/gtk/gtkhid-gl.c'; then $(CYGPATH_W) 'hid/gtk/gtkhid-gl.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gtkhid-gl.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-gl.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-gl.Po
#	source='hid/gtk/gtkhid-gl.c' object='hid/gtk/libgtk_a-gtkhid-gl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gtkhid-gl.obj `if test -f 'hid/gtk/gtkhid-gl.c'; then $(CYGPATH_W) 'hid/gtk/gtkhid-gl.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gtkhid-gl.c'; fi`

hid/gtk/libgtk_a-gui-trackball.o: hid/gtk/gui-trackball.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-trackball.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-trackball.Tpo -c -o hid/gtk/libgtk_a-gui-trackball.o `test -f 'hid/gtk/gui-trackball.c' || echo '$(srcdir)/'`hid/gtk/gui-trackball.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-trackball.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-trackball.Po
#	source='hid/gtk/gui-trackball.c' object='hid/gtk/libgtk_a-gui-trackball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-trackball.o `test -f 'hid/gtk/gui-trackball.c' || echo '$(srcdir)/'`hid/gtk/gui-trackball.c

hid/gtk/libgtk_a-gui-trackball.obj: hid/gtk/gui-trackball.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gui-trackball.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gui-trackball.Tpo -c -o hid/gtk/libgtk_a-gui-trackball.obj `if test -f 'hid/gtk/gui-trackball.c'; then $(CYGPATH_W) 'hid/gtk/gui-trackball.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-trackball.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gui-trackball.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gui-trackball.Po
#	source='hid/gtk/gui-trackball.c' object='hid/gtk/libgtk_a-gui-trackball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gui-trackball.obj `if test -f 'hid/gtk/gui-trackball.c'; then $(CYGPATH_W) 'hid/gtk/gui-trackball.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gui-trackball.c'; fi`

hid/gtk/libgtk_a-gtkhid-gdk.o: hid/gtk/gtkhid-gdk.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gtkhid-gdk.o -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-gdk.Tpo -c -o hid/gtk/libgtk_a-gtkhid-gdk.o `test -f 'hid/gtk/gtkhid-gdk.c' || echo '$(srcdir)/'`hid/gtk/gtkhid-gdk.c
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-gdk.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-gdk.Po
#	source='hid/gtk/gtkhid-gdk.c' object='hid/gtk/libgtk_a-gtkhid-gdk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gtkhid-gdk.o `test -f 'hid/gtk/gtkhid-gdk.c' || echo '$(srcdir)/'`hid/gtk/gtkhid-gdk.c

hid/gtk/libgtk_a-gtkhid-gdk.obj: hid/gtk/gtkhid-gdk.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/gtk/libgtk_a-gtkhid-gdk.obj -MD -MP -MF hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-gdk.Tpo -c -o hid/gtk/libgtk_a-gtkhid-gdk.obj `if test -f 'hid/gtk/gtkhid-gdk.c'; then $(CYGPATH_W) 'hid/gtk/gtkhid-gdk.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gtkhid-gdk.c'; fi`
	$(am__mv) hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-gdk.Tpo hid/gtk/$(DEPDIR)/libgtk_a-gtkhid-gdk.Po
#	source='hid/gtk/gtkhid-gdk.c' object='hid/gtk/libgtk_a-gtkhid-gdk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/gtk/libgtk_a-gtkhid-gdk.obj `if test -f 'hid/gtk/gtkhid-gdk.c'; then $(CYGPATH_W) 'hid/gtk/gtkhid-gdk.c'; else $(CYGPATH_W) '$(srcdir)/hid/gtk/gtkhid-gdk.c'; fi`

hid/lesstif/liblesstif_a-dialogs.o: hid/lesstif/dialogs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/lesstif/liblesstif_a-dialogs.o -MD -MP -MF hid/lesstif/$(DEPDIR)/liblesstif_a-dialogs.Tpo -c -o hid/lesstif/liblesstif_a-dialogs.o `test -f 'hid/lesstif/dialogs.c' || echo '$(srcdir)/'`hid/lesstif/dialogs.c
	$(am__mv) hid/lesstif/$(DEPDIR)/liblesstif_a-dialogs.Tpo hid/lesstif/$(DEPDIR)/liblesstif_a-dialogs.Po
#	source='hid/lesstif/dialogs.c' object='hid/lesstif/liblesstif_a-dialogs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/lesstif/liblesstif_a-dialogs.o `test -f 'hid/lesstif/dialogs.c' || echo '$(srcdir)/'`hid/lesstif/dialogs.c

hid/lesstif/liblesstif_a-dialogs.obj: hid/lesstif/dialogs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/lesstif/liblesstif_a-dialogs.obj -MD -MP -MF hid/lesstif/$(DEPDIR)/liblesstif_a-dialogs.Tpo -c -o hid/lesstif/liblesstif_a-dialogs.obj `if test -f 'hid/lesstif/dialogs.c'; then $(CYGPATH_W) 'hid/lesstif/dialogs.c'; else $(CYGPATH_W) '$(srcdir)/hid/lesstif/dialogs.c'; fi`
	$(am__mv) hid/lesstif/$(DEPDIR)/liblesstif_a-dialogs.Tpo hid/lesstif/$(DEPDIR)/liblesstif_a-dialogs.Po
#	source='hid/lesstif/dialogs.c' object='hid/lesstif/liblesstif_a-dialogs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/lesstif/liblesstif_a-dialogs.obj `if test -f 'hid/lesstif/dialogs.c'; then $(CYGPATH_W) 'hid/lesstif/dialogs.c'; else $(CYGPATH_W) '$(srcdir)/hid/lesstif/dialogs.c'; fi`

hid/lesstif/liblesstif_a-library.o: hid/lesstif/library.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/lesstif/liblesstif_a-library.o -MD -MP -MF hid/lesstif/$(DEPDIR)/liblesstif_a-library.Tpo -c -o hid/lesstif/liblesstif_a-library.o `test -f 'hid/lesstif/library.c' || echo '$(srcdir)/'`hid/lesstif/library.c
	$(am__mv) hid/lesstif/$(DEPDIR)/liblesstif_a-library.Tpo hid/lesstif/$(DEPDIR)/liblesstif_a-library.Po
#	source='hid/lesstif/library.c' object='hid/lesstif/liblesstif_a-library.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/lesstif/liblesstif_a-library.o `test -f 'hid/lesstif/library.c' || echo '$(srcdir)/'`hid/lesstif/library.c

hid/lesstif/liblesstif_a-library.obj: hid/lesstif/library.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/lesstif/liblesstif_a-library.obj -MD -MP -MF hid/lesstif/$(DEPDIR)/liblesstif_a-library.Tpo -c -o hid/lesstif/liblesstif_a-library.obj `if test -f 'hid/lesstif/library.c'; then $(CYGPATH_W) 'hid/lesstif/library.c'; else $(CYGPATH_W) '$(srcdir)/hid/lesstif/library.c'; fi`
	$(am__mv) hid/lesstif/$(DEPDIR)/liblesstif_a-library.Tpo hid/lesstif/$(DEPDIR)/liblesstif_a-library.Po
#	source='hid/lesstif/library.c' object='hid/lesstif/liblesstif_a-library.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/lesstif/liblesstif_a-library.obj `if test -f 'hid/lesstif/library.c'; then $(CYGPATH_W) 'hid/lesstif/library.c'; else $(CYGPATH_W) '$(srcdir)/hid/lesstif/library.c'; fi`

hid/lesstif/liblesstif_a-main.o: hid/lesstif/main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/lesstif/liblesstif_a-main.o -MD -MP -MF hid/lesstif/$(DEPDIR)/liblesstif_a-main.Tpo -c -o hid/lesstif/liblesstif_a-main.o `test -f 'hid/lesstif/main.c' || echo '$(srcdir)/'`hid/lesstif/main.c
	$(am__mv) hid/lesstif/$(DEPDIR)/liblesstif_a-main.Tpo hid/lesstif/$(DEPDIR)/liblesstif_a-main.Po
#	source='hid/lesstif/main.c' object='hid/lesstif/liblesstif_a-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/lesstif/liblesstif_a-main.o `test -f 'hid/lesstif/main.c' || echo '$(srcdir)/'`hid/lesstif/main.c

hid/lesstif/liblesstif_a-main.obj: hid/lesstif/main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/lesstif/liblesstif_a-main.obj -MD -MP -MF hid/lesstif/$(DEPDIR)/liblesstif_a-main.Tpo -c -o hid/lesstif/liblesstif_a-main.obj `if test -f 'hid/lesstif/main.c'; then $(CYGPATH_W) 'hid/lesstif/main.c'; else $(CYGPATH_W) '$(srcdir)/hid/lesstif/main.c'; fi`
	$(am__mv) hid/lesstif/$(DEPDIR)/liblesstif_a-main.Tpo hid/lesstif/$(DEPDIR)/liblesstif_a-main.Po
#	source='hid/lesstif/main.c' object='hid/lesstif/liblesstif_a-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/lesstif/liblesstif_a-main.obj `if test -f 'hid/lesstif/main.c'; then $(CYGPATH_W) 'hid/lesstif/main.c'; else $(CYGPATH_W) '$(srcdir)/hid/lesstif/main.c'; fi`

hid/lesstif/liblesstif_a-menu.o: hid/lesstif/menu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/lesstif/liblesstif_a-menu.o -MD -MP -MF hid/lesstif/$(DEPDIR)/liblesstif_a-menu.Tpo -c -o hid/lesstif/liblesstif_a-menu.o `test -f 'hid/lesstif/menu.c' || echo '$(srcdir)/'`hid/lesstif/menu.c
	$(am__mv) hid/lesstif/$(DEPDIR)/liblesstif_a-menu.Tpo hid/lesstif/$(DEPDIR)/liblesstif_a-menu.Po
#	source='hid/lesstif/menu.c' object='hid/lesstif/liblesstif_a-menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/lesstif/liblesstif_a-menu.o `test -f 'hid/lesstif/menu.c' || echo '$(srcdir)/'`hid/lesstif/menu.c

hid/lesstif/liblesstif_a-menu.obj: hid/lesstif/menu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/lesstif/liblesstif_a-menu.obj -MD -MP -MF hid/lesstif/$(DEPDIR)/liblesstif_a-menu.Tpo -c -o hid/lesstif/liblesstif_a-menu.obj `if test -f 'hid/lesstif/menu.c'; then $(CYGPATH_W) 'hid/lesstif/menu.c'; else $(CYGPATH_W) '$(srcdir)/hid/lesstif/menu.c'; fi`
	$(am__mv) hid/lesstif/$(DEPDIR)/liblesstif_a-menu.Tpo hid/lesstif/$(DEPDIR)/liblesstif_a-menu.Po
#	source='hid/lesstif/menu.c' object='hid/lesstif/liblesstif_a-menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/lesstif/liblesstif_a-menu.obj `if test -f 'hid/lesstif/menu.c'; then $(CYGPATH_W) 'hid/lesstif/menu.c'; else $(CYGPATH_W) '$(srcdir)/hid/lesstif/menu.c'; fi`

hid/lesstif/liblesstif_a-netlist.o: hid/lesstif/netlist.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/lesstif/liblesstif_a-netlist.o -MD -MP -MF hid/lesstif/$(DEPDIR)/liblesstif_a-netlist.Tpo -c -o hid/lesstif/liblesstif_a-netlist.o `test -f 'hid/lesstif/netlist.c' || echo '$(srcdir)/'`hid/lesstif/netlist.c
	$(am__mv) hid/lesstif/$(DEPDIR)/liblesstif_a-netlist.Tpo hid/lesstif/$(DEPDIR)/liblesstif_a-netlist.Po
#	source='hid/lesstif/netlist.c' object='hid/lesstif/liblesstif_a-netlist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/lesstif/liblesstif_a-netlist.o `test -f 'hid/lesstif/netlist.c' || echo '$(srcdir)/'`hid/lesstif/netlist.c

hid/lesstif/liblesstif_a-netlist.obj: hid/lesstif/netlist.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/lesstif/liblesstif_a-netlist.obj -MD -MP -MF hid/lesstif/$(DEPDIR)/liblesstif_a-netlist.Tpo -c -o hid/lesstif/liblesstif_a-netlist.obj `if test -f 'hid/lesstif/netlist.c'; then $(CYGPATH_W) 'hid/lesstif/netlist.c'; else $(CYGPATH_W) '$(srcdir)/hid/lesstif/netlist.c'; fi`
	$(am__mv) hid/lesstif/$(DEPDIR)/liblesstif_a-netlist.Tpo hid/lesstif/$(DEPDIR)/liblesstif_a-netlist.Po
#	source='hid/lesstif/netlist.c' object='hid/lesstif/liblesstif_a-netlist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/lesstif/liblesstif_a-netlist.obj `if test -f 'hid/lesstif/netlist.c'; then $(CYGPATH_W) 'hid/lesstif/netlist.c'; else $(CYGPATH_W) '$(srcdir)/hid/lesstif/netlist.c'; fi`

hid/lesstif/liblesstif_a-styles.o: hid/lesstif/styles.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/lesstif/liblesstif_a-styles.o -MD -MP -MF hid/lesstif/$(DEPDIR)/liblesstif_a-styles.Tpo -c -o hid/lesstif/liblesstif_a-styles.o `test -f 'hid/lesstif/styles.c' || echo '$(srcdir)/'`hid/lesstif/styles.c
	$(am__mv) hid/lesstif/$(DEPDIR)/liblesstif_a-styles.Tpo hid/lesstif/$(DEPDIR)/liblesstif_a-styles.Po
#	source='hid/lesstif/styles.c' object='hid/lesstif/liblesstif_a-styles.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/lesstif/liblesstif_a-styles.o `test -f 'hid/lesstif/styles.c' || echo '$(srcdir)/'`hid/lesstif/styles.c

hid/lesstif/liblesstif_a-styles.obj: hid/lesstif/styles.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/lesstif/liblesstif_a-styles.obj -MD -MP -MF hid/lesstif/$(DEPDIR)/liblesstif_a-styles.Tpo -c -o hid/lesstif/liblesstif_a-styles.obj `if test -f 'hid/lesstif/styles.c'; then $(CYGPATH_W) 'hid/lesstif/styles.c'; else $(CYGPATH_W) '$(srcdir)/hid/lesstif/styles.c'; fi`
	$(am__mv) hid/lesstif/$(DEPDIR)/liblesstif_a-styles.Tpo hid/lesstif/$(DEPDIR)/liblesstif_a-styles.Po
#	source='hid/lesstif/styles.c' object='hid/lesstif/liblesstif_a-styles.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(liblesstif_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/lesstif/liblesstif_a-styles.obj `if test -f 'hid/lesstif/styles.c'; then $(CYGPATH_W) 'hid/lesstif/styles.c'; else $(CYGPATH_W) '$(srcdir)/hid/lesstif/styles.c'; fi`

hid/nelma/libnelma_a-nelma.o: hid/nelma/nelma.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnelma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/nelma/libnelma_a-nelma.o -MD -MP -MF hid/nelma/$(DEPDIR)/libnelma_a-nelma.Tpo -c -o hid/nelma/libnelma_a-nelma.o `test -f 'hid/nelma/nelma.c' || echo '$(srcdir)/'`hid/nelma/nelma.c
	$(am__mv) hid/nelma/$(DEPDIR)/libnelma_a-nelma.Tpo hid/nelma/$(DEPDIR)/libnelma_a-nelma.Po
#	source='hid/nelma/nelma.c' object='hid/nelma/libnelma_a-nelma.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnelma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/nelma/libnelma_a-nelma.o `test -f 'hid/nelma/nelma.c' || echo '$(srcdir)/'`hid/nelma/nelma.c

hid/nelma/libnelma_a-nelma.obj: hid/nelma/nelma.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnelma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/nelma/libnelma_a-nelma.obj -MD -MP -MF hid/nelma/$(DEPDIR)/libnelma_a-nelma.Tpo -c -o hid/nelma/libnelma_a-nelma.obj `if test -f 'hid/nelma/nelma.c'; then $(CYGPATH_W) 'hid/nelma/nelma.c'; else $(CYGPATH_W) '$(srcdir)/hid/nelma/nelma.c'; fi`
	$(am__mv) hid/nelma/$(DEPDIR)/libnelma_a-nelma.Tpo hid/nelma/$(DEPDIR)/libnelma_a-nelma.Po
#	source='hid/nelma/nelma.c' object='hid/nelma/libnelma_a-nelma.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libnelma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/nelma/libnelma_a-nelma.obj `if test -f 'hid/nelma/nelma.c'; then $(CYGPATH_W) 'hid/nelma/nelma.c'; else $(CYGPATH_W) '$(srcdir)/hid/nelma/nelma.c'; fi`

hid/png/libpng_a-png.o: hid/png/png.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpng_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/png/libpng_a-png.o -MD -MP -MF hid/png/$(DEPDIR)/libpng_a-png.Tpo -c -o hid/png/libpng_a-png.o `test -f 'hid/png/png.c' || echo '$(srcdir)/'`hid/png/png.c
	$(am__mv) hid/png/$(DEPDIR)/libpng_a-png.Tpo hid/png/$(DEPDIR)/libpng_a-png.Po
#	source='hid/png/png.c' object='hid/png/libpng_a-png.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpng_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/png/libpng_a-png.o `test -f 'hid/png/png.c' || echo '$(srcdir)/'`hid/png/png.c

hid/png/libpng_a-png.obj: hid/png/png.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpng_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/png/libpng_a-png.obj -MD -MP -MF hid/png/$(DEPDIR)/libpng_a-png.Tpo -c -o hid/png/libpng_a-png.obj `if test -f 'hid/png/png.c'; then $(CYGPATH_W) 'hid/png/png.c'; else $(CYGPATH_W) '$(srcdir)/hid/png/png.c'; fi`
	$(am__mv) hid/png/$(DEPDIR)/libpng_a-png.Tpo hid/png/$(DEPDIR)/libpng_a-png.Po
#	source='hid/png/png.c' object='hid/png/libpng_a-png.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpng_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/png/libpng_a-png.obj `if test -f 'hid/png/png.c'; then $(CYGPATH_W) 'hid/png/png.c'; else $(CYGPATH_W) '$(srcdir)/hid/png/png.c'; fi`

hid/ps/libps_a-ps.o: hid/ps/ps.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libps_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/ps/libps_a-ps.o -MD -MP -MF hid/ps/$(DEPDIR)/libps_a-ps.Tpo -c -o hid/ps/libps_a-ps.o `test -f 'hid/ps/ps.c' || echo '$(srcdir)/'`hid/ps/ps.c
	$(am__mv) hid/ps/$(DEPDIR)/libps_a-ps.Tpo hid/ps/$(DEPDIR)/libps_a-ps.Po
#	source='hid/ps/ps.c' object='hid/ps/libps_a-ps.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libps_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/ps/libps_a-ps.o `test -f 'hid/ps/ps.c' || echo '$(srcdir)/'`hid/ps/ps.c

hid/ps/libps_a-ps.obj: hid/ps/ps.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libps_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/ps/libps_a-ps.obj -MD -MP -MF hid/ps/$(DEPDIR)/libps_a-ps.Tpo -c -o hid/ps/libps_a-ps.obj `if test -f 'hid/ps/ps.c'; then $(CYGPATH_W) 'hid/ps/ps.c'; else $(CYGPATH_W) '$(srcdir)/hid/ps/ps.c'; fi`
	$(am__mv) hid/ps/$(DEPDIR)/libps_a-ps.Tpo hid/ps/$(DEPDIR)/libps_a-ps.Po
#	source='hid/ps/ps.c' object='hid/ps/libps_a-ps.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libps_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/ps/libps_a-ps.obj `if test -f 'hid/ps/ps.c'; then $(CYGPATH_W) 'hid/ps/ps.c'; else $(CYGPATH_W) '$(srcdir)/hid/ps/ps.c'; fi`

hid/ps/libps_a-eps.o: hid/ps/eps.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libps_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/ps/libps_a-eps.o -MD -MP -MF hid/ps/$(DEPDIR)/libps_a-eps.Tpo -c -o hid/ps/libps_a-eps.o `test -f 'hid/ps/eps.c' || echo '$(srcdir)/'`hid/ps/eps.c
	$(am__mv) hid/ps/$(DEPDIR)/libps_a-eps.Tpo hid/ps/$(DEPDIR)/libps_a-eps.Po
#	source='hid/ps/eps.c' object='hid/ps/libps_a-eps.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libps_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/ps/libps_a-eps.o `test -f 'hid/ps/eps.c' || echo '$(srcdir)/'`hid/ps/eps.c

hid/ps/libps_a-eps.obj: hid/ps/eps.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libps_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hid/ps/libps_a-eps.obj -MD -MP -MF hid/ps/$(DEPDIR)/libps_a-eps.Tpo -c -o hid/ps/libps_a-eps.obj `if test -f 'hid/ps/eps.c'; then $(CYGPATH_W) 'hid/ps/eps.c'; else $(CYGPATH_W) '$(srcdir)/hid/ps/eps.c'; fi`
	$(am__mv) hid/ps/$(DEPDIR)/libps_a-eps.Tpo hid/ps/$(DEPDIR)/libps_a-eps.Po
#	source='hid/ps/eps.c' object='hid/ps/libps_a-eps.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libps_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hid/ps/libps_a-eps.obj `if test -f 'hid/ps/eps.c'; then $(CYGPATH_W) 'hid/ps/eps.c'; else $(CYGPATH_W) '$(srcdir)/hid/ps/eps.c'; fi`

.l.c:
	$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.y.c:
	$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h `echo $@ | $(am__yacc_c2h)` y.output $*.output -- $(YACCCOMPILE)
install-pcblibDATA: $(pcblib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pcblib_DATA)'; test -n "$(pcblibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pcblibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pcblibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pcblibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pcblibdir)" || exit $$?; \
	done

uninstall-pcblibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pcblib_DATA)'; test -n "$(pcblibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pcblibdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done
cscopelist-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) cscopelist); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist: cscopelist-recursive $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(DATA) all-local
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pcblibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f hid/batch/$(DEPDIR)/$(am__dirstamp)
	-rm -f hid/batch/$(am__dirstamp)
	-rm -f hid/bom/$(DEPDIR)/$(am__dirstamp)
	-rm -f hid/bom/$(am__dirstamp)
	-rm -f hid/common/$(DEPDIR)/$(am__dirstamp)
	-rm -f hid/common/$(am__dirstamp)
	-rm -f hid/gcode/$(DEPDIR)/$(am__dirstamp)
	-rm -f hid/gcode/$(am__dirstamp)
	-rm -f hid/gerber/$(DEPDIR)/$(am__dirstamp)
	-rm -f hid/gerber/$(am__dirstamp)
	-rm -f hid/gtk/$(DEPDIR)/$(am__dirstamp)
	-rm -f hid/gtk/$(am__dirstamp)
	-rm -f hid/lesstif/$(DEPDIR)/$(am__dirstamp)
	-rm -f hid/lesstif/$(am__dirstamp)
	-rm -f hid/lpr/$(DEPDIR)/$(am__dirstamp)
	-rm -f hid/lpr/$(am__dirstamp)
	-rm -f hid/nelma/$(DEPDIR)/$(am__dirstamp)
	-rm -f hid/nelma/$(am__dirstamp)
	-rm -f hid/png/$(DEPDIR)/$(am__dirstamp)
	-rm -f hid/png/$(am__dirstamp)
	-rm -f hid/ps/$(DEPDIR)/$(am__dirstamp)
	-rm -f hid/ps/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f edif.c
	-rm -f edif.h
	-rm -f parse_l.c
	-rm -f parse_y.c
	-rm -f parse_y.h
	-rm -f res_lex.c
	-rm -f res_parse.c
	-rm -f res_parse.h
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) hid/batch/$(DEPDIR) hid/bom/$(DEPDIR) hid/common/$(DEPDIR) hid/gcode/$(DEPDIR) hid/gerber/$(DEPDIR) hid/gtk/$(DEPDIR) hid/lesstif/$(DEPDIR) hid/lpr/$(DEPDIR) hid/nelma/$(DEPDIR) hid/png/$(DEPDIR) hid/ps/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-pcblibDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) hid/batch/$(DEPDIR) hid/bom/$(DEPDIR) hid/common/$(DEPDIR) hid/gcode/$(DEPDIR) hid/gerber/$(DEPDIR) hid/gtk/$(DEPDIR) hid/lesstif/$(DEPDIR) hid/lpr/$(DEPDIR) hid/nelma/$(DEPDIR) hid/png/$(DEPDIR) hid/ps/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-pcblibDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check \
	check-am cscopelist-recursive ctags-recursive install \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am all-local check check-am check-local clean \
	clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	cscopelist cscopelist-recursive ctags ctags-recursive \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pcblibDATA install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-pcblibDATA


# Action, Attribute, and Flag lists.
core_lists.h : ${PCB_SRCS} Makefile
	true > $@
	(for f in ${PCB_SRCS} ; do cat $(srcdir)/$$f ; done) | grep "^REGISTER" > $@.tmp
	mv $@.tmp $@

all-local: pcbtest.sh

pcb-menu.res : pcb-menu.res.in
	echo '/* AUTOMATICALLY GENERATED FROM pcb-menu.res.in DO NOT EDIT */' > $@
	cat ${srcdir}/pcb-menu.res.in >> $@

pcb-menu.h : pcb-menu.res
	echo '/* AUTOMATICALLY GENERATED FROM pcb-menu.res DO NOT EDIT */' > $@
	echo 'const char *pcb_menu_default[] = {' >> $@
	sed 's/\\/\\\\/g; s/"/\\"/g; s/^/"/; s/$$/",/' < pcb-menu.res >> $@
	echo '0};' >> $@

gpcb-menu.res : gpcb-menu.res.in
	echo '/* AUTOMATICALLY GENERATED FROM gpcb-menu.res.in DO NOT EDIT */' > $@
	cat ${srcdir}/gpcb-menu.res.in >> $@

gpcb-menu.h : gpcb-menu.res
	echo '/* AUTOMATICALLY GENERATED FROM gpcb-menu.res DO NOT EDIT */' > $@
	echo 'const char *gpcb_menu_default[] = {' >> $@
	sed 's/\\/\\\\/g; s/"/\\"/g; s/^/"/; s/$$/",/' < gpcb-menu.res >> $@
	echo '0};' >> $@

# Menus i18n
%.res.h : %.res
	$(INTLTOOL_EXTRACT) --type=gettext/quoted $^
	mv -f $@ ${srcdir}/$@ || true

check-local: gpcb-menu.res.h pcb-menu.res.h

hid/common/hidlist.h : Makefile
	$(MKDIR_P) hid/common
	true > $@
	for e in ${HIDLIST}; do \
	  echo "HID_DEF($${e})" >> $@; \
	done

hid/gtk/gtk_lists.h : ${LIBGTK_SRCS} Makefile
	$(MKDIR_P) hid/gtk
	true > $@
	(for f in ${LIBGTK_SRCS} ; do cat $(srcdir)/$$f ; done) | grep "^REGISTER" > $@.tmp
	mv $@.tmp $@

# If we are building with dbus support, we need some extra files
dbus-introspect.h : dbus.xml Makefile
	echo '/* AUTOMATICALLY GENERATED FROM dbus.xml DO NOT EDIT */' > $@.tmp
	echo "static char *pcb_dbus_introspect_xml ="  > $@.tmp
	sed 's/\\/\\\\/g; s/"/\\"/g; s/^/"/; s/$$/"/' < $(srcdir)/dbus.xml >> $@.tmp
	echo ";" >> $@.tmp
	mv $@.tmp $@

# If we are building on win32, then compile in some icons for the
# desktop and application toolbar
#pcb_icon.o : pcb_icon.ico $(srcdir)/hid/gtk/pcb.rc
#	$(WINDRES) $(srcdir)/hid/gtk/pcb.rc $@

#pcb_icon.ico: $(top_srcdir)/data/pcb_icon.ico
#	cp $(top_srcdir)/data/pcb_icon.ico $@

hid/lesstif/lesstif_lists.h : ${LIBLESSTIF_SRCS} Makefile
	$(MKDIR_P) hid/lesstif
	true > $@
	(for f in ${LIBLESSTIF_SRCS} ; do cat $(srcdir)/$$f ; done) | grep "^REGISTER" > $@.tmp
	mv $@.tmp $@

hid/batch/batch_lists.h : ${LIBBATCH_SRCS} Makefile
	$(MKDIR_P) hid/batch
	true > $@
	(for f in ${LIBBATCH_SRCS} ; do cat $(srcdir)/$$f ; done) | grep "^REGISTER" > $@.tmp
	mv $@.tmp $@

hid/ps/ps_lists.h : ${LIBPS_SRCS} Makefile
	$(MKDIR_P) hid/ps
	true > $@
	(for f in ${LIBPS_SRCS} ; do cat $(srcdir)/$$f ; done) | grep "^REGISTER" > $@.tmp
	mv $@.tmp $@

hid/png/png_lists.h : ${LIBPNG_SRCS} Makefile
	$(MKDIR_P) hid/png
	true > $@
	(for f in ${LIBPNG_SRCS} ; do cat $(srcdir)/$$f ; done) | grep "^REGISTER" > $@.tmp
	mv $@.tmp $@

hid/gcode/gcode_lists.h : ${LIBGCODE_SRCS} Makefile
	$(MKDIR_P) hid/gcode
	true > $@
	(for f in ${LIBGCODE_SRCS} ; do cat $(srcdir)/$$f ; done) | grep "^REGISTER" > $@.tmp
	mv $@.tmp $@

hid/nelma/nelma_lists.h : ${LIBNELMA_SRCS} Makefile
	$(MKDIR_P) hid/nelma
	true > $@
	(for f in ${LIBNELMA_SRCS} ; do cat $(srcdir)/$$f ; done) | grep "^REGISTER" > $@.tmp
	mv $@.tmp $@

# create wrapper script that lets you test pcb prior to installation
pcbtest.sh:	$(srcdir)/pcbtest.sh.in Makefile
	sed -e 's;@BUILDDIR@;${abs_builddir};g' -e 's;@TOP_BUILDDIR@;${abs_top_builddir};g' \
		-e 's;@TOPSRCDIR@;${abs_top_srcdir};g' \
		$(srcdir)/pcbtest.sh.in > $@
	chmod 755 $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
